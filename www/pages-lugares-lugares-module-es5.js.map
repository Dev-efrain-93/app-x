{"version":3,"sources":["pages-lugares-lugares-module-es5.js","webpack:///node_modules/@ionic-native/google-maps/ngx/index.js","webpack:///src/app/pages/lugares/lugares.page.html","webpack:///src/app/pages/lugares/lugares-routing.module.ts","webpack:///src/app/pages/lugares/lugares.module.ts","webpack:///src/app/pages/lugares/lugares.page.scss","webpack:///src/app/pages/lugares/lugares.page.ts","webpack:///src/app/pages/lugares/map-dark-style.js","webpack:///src/app/services/lugares.service.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"pages-lugares-lugares-module\"],{\n\n/***/ \"./node_modules/@ionic-native/google-maps/ngx/index.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/@ionic-native/google-maps/ngx/index.js ***!\n  \\*************************************************************/\n/*! exports provided: LatLng, LatLngBounds, VisibleRegion, StreetViewSource, GoogleMapsEvent, GoogleMapsAnimation, GoogleMapsMapTypeId, GoogleMaps, BaseClass, BaseArrayClass, Circle, Environment, Geocoder, LocationService, Encoding, Poly, Spherical, StreetViewPanorama, GoogleMap, GroundOverlay, HtmlInfoWindow, Marker, MarkerCluster, Polygon, Polyline, TileOverlay, KmlOverlay, ɵ0, ɵ1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LatLng\", function() { return LatLng; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LatLngBounds\", function() { return LatLngBounds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VisibleRegion\", function() { return VisibleRegion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StreetViewSource\", function() { return StreetViewSource; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GoogleMapsEvent\", function() { return GoogleMapsEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GoogleMapsAnimation\", function() { return GoogleMapsAnimation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GoogleMapsMapTypeId\", function() { return GoogleMapsMapTypeId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GoogleMaps\", function() { return GoogleMaps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaseClass\", function() { return BaseClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaseArrayClass\", function() { return BaseArrayClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Circle\", function() { return Circle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Environment\", function() { return Environment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Geocoder\", function() { return Geocoder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LocationService\", function() { return LocationService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Encoding\", function() { return Encoding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Poly\", function() { return Poly; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Spherical\", function() { return Spherical; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StreetViewPanorama\", function() { return StreetViewPanorama; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GoogleMap\", function() { return GoogleMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GroundOverlay\", function() { return GroundOverlay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HtmlInfoWindow\", function() { return HtmlInfoWindow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Marker\", function() { return Marker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkerCluster\", function() { return MarkerCluster; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Polygon\", function() { return Polygon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Polyline\", function() { return Polyline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TileOverlay\", function() { return TileOverlay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KmlOverlay\", function() { return KmlOverlay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵ0\", function() { return ɵ0; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵ1\", function() { return ɵ1; });\n/* harmony import */ var _ionic_native_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ionic-native/core */ \"./node_modules/@ionic-native/core/index.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm2015/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _this = undefined;\n\n\nvar TARGET_ELEMENT_FINDING_QUERYS = [\n    '.show-page #',\n    'ion-router-outlet[main] #',\n    '#'\n];\nvar LatLng = /** @class */ (function () {\n    function LatLng(lat, lng) {\n        this.lat = lat;\n        this.lng = lng;\n    }\n    LatLng.prototype.equals = function (other) {\n        return this.lat === other.lat && this.lng === other.lng;\n    };\n    LatLng.prototype.toString = function () {\n        return this.lat + ',' + this.lng;\n    };\n    LatLng.prototype.toUrlValue = function (precision) {\n        precision = precision || 6;\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n    };\n    return LatLng;\n}());\n\nvar LatLngBounds = /** @class */ (function () {\n    function LatLngBounds(points) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\n    }\n    LatLngBounds.prototype.toString = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"toString\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.toUrlValue = function (precision) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.extend = function (LatLng) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"extend\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.contains = function (LatLng) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"contains\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.getCenter = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Object.defineProperty(LatLngBounds.prototype, \"northeast\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"northeast\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"southwest\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"southwest\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"type\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"type\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return LatLngBounds;\n}());\n\nvar VisibleRegion = /** @class */ (function () {\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\n    }\n    VisibleRegion.prototype.toString = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"toString\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.toUrlValue = function (precision) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.contains = function (LatLng) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"contains\", { \"sync\": true }, arguments); };\n    Object.defineProperty(VisibleRegion.prototype, \"northeast\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"northeast\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"southwest\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"southwest\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farLeft\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"farLeft\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"farLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farRight\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"farRight\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"farRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearLeft\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"nearLeft\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"nearLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearRight\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"nearRight\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"nearRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"type\", {\n        get: function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertyGet\"])(this, \"type\"); },\n        set: function (value) { Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instancePropertySet\"])(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return VisibleRegion;\n}());\n\n/**\n * @hidden\n */\nvar StreetViewSource = {\n    DEFAULT: 'DEFAULT',\n    OUTDOOR: 'OUTDOOR'\n};\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nvar GoogleMapsEvent = {\n    MAP_READY: 'map_ready',\n    MAP_CLICK: 'map_click',\n    MAP_LONG_CLICK: 'map_long_click',\n    POI_CLICK: 'poi_click',\n    MY_LOCATION_CLICK: 'my_location_click',\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n    CAMERA_MOVE_START: 'camera_move_start',\n    CAMERA_MOVE: 'camera_move',\n    CAMERA_MOVE_END: 'camera_move_end',\n    OVERLAY_CLICK: 'overlay_click',\n    POLYGON_CLICK: 'polygon_click',\n    POLYLINE_CLICK: 'polyline_click',\n    CIRCLE_CLICK: 'circle_click',\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\n    INFO_CLICK: 'info_click',\n    INFO_LONG_CLICK: 'info_long_click',\n    INFO_CLOSE: 'info_close',\n    INFO_OPEN: 'info_open',\n    MARKER_CLICK: 'marker_click',\n    MARKER_DRAG: 'marker_drag',\n    MARKER_DRAG_START: 'marker_drag_start',\n    MARKER_DRAG_END: 'marker_drag_end',\n    MAP_DRAG: 'map_drag',\n    MAP_DRAG_START: 'map_drag_start',\n    MAP_DRAG_END: 'map_drag_end',\n    KML_CLICK: 'kml_click',\n    PANORAMA_READY: 'panorama_ready',\n    PANORAMA_CAMERA_CHANGE: 'panorama_camera_change',\n    PANORAMA_LOCATION_CHANGE: 'panorama_location_change',\n    PANORAMA_CLICK: 'panorama_click'\n};\n/**\n * @hidden\n */\nvar GoogleMapsAnimation = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\n/**\n * @hidden\n */\nvar GoogleMapsMapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\nvar GoogleMaps = /** @class */ (function (_super) {\n    __extends(GoogleMaps, _super);\n    function GoogleMaps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new GoogleMap instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {GoogleMapOptions} [options] Options\n     * @return {GoogleMap}\n     */\n    GoogleMaps.create = function (element, options) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            else if (typeof element === 'object') {\n                options = element;\n                element = null;\n            }\n            var googleMap = new GoogleMap(element, options);\n            googleMap.set('_overlays', {});\n            return googleMap;\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    /**\n     * @deprecation keep this for backward compatibility.\n     * @hidden\n     */\n    GoogleMaps.prototype.create = function (element, options) {\n        console.error('GoogleMaps', '[deprecated] Please use GoogleMaps.create()');\n        return GoogleMaps.create(element, options);\n    };\n    /**\n     * Creates a new StreetView instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {StreetViewOptions} [options] Options\n     * @return {StreetViewPanorama}\n     */\n    GoogleMaps.createPanorama = function (element, options) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            return new StreetViewPanorama(element, options);\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    GoogleMaps.pluginName = \"GoogleMaps\";\n    GoogleMaps.pluginRef = \"plugin.google.maps\";\n    GoogleMaps.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMaps.repo = \"https://github.com/mapsplugin/cordova-plugin-googlemaps\";\n    GoogleMaps.document = \"https://ionicframework.com/docs/native/google-maps/\";\n    GoogleMaps.install = \"ionic cordova plugin add cordova-plugin-googlemaps --variable API_KEY_FOR_ANDROID=\\\"YOUR_ANDROID_API_KEY_IS_HERE\\\" --variable API_KEY_FOR_IOS=\\\"YOUR_IOS_API_KEY_IS_HERE\\\"\";\n    GoogleMaps.installVariables = [\"API_KEY_FOR_ANDROID\", \"API_KEY_FOR_IOS\"];\n    GoogleMaps.platforms = [\"Android\", \"iOS\", \"Browser\"];\n    GoogleMaps = __decorate([], GoogleMaps);\n    return GoogleMaps;\n}(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"IonicNativePlugin\"]));\n\nvar displayErrorMessage = function (element, message) {\n    var errorDiv = document.createElement('div');\n    errorDiv.innerHTML = message;\n    errorDiv.style.color = 'red';\n    errorDiv.style.position = 'absolute';\n    errorDiv.style.width = '80%';\n    errorDiv.style.height = '50%';\n    errorDiv.style.top = '0px';\n    errorDiv.style.bottom = '0px';\n    errorDiv.style.right = '0px';\n    errorDiv.style.left = '0px';\n    errorDiv.style.padding = '0px';\n    errorDiv.style.margin = 'auto';\n    element.style.position = 'relative';\n    element.style.backgroundColor = '#ccc7';\n    element.appendChild(errorDiv);\n};\nvar ɵ0 = displayErrorMessage;\nvar normalizeArgumentsOfEventListener = function (_objectInstance, args) {\n    if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n        if (args[args.length - 1].type === 'Map' || args[args.length - 1].type === 'StreetViewPanorama') {\n            args[args.length - 1] = _this;\n        }\n        else if (_objectInstance.__pgmId.indexOf('markercluster_') !== -1) {\n            var _overlays = _objectInstance.getMap().get('_overlays') || {};\n            var overlay = _overlays[args[args.length - 1].getId()];\n            if (!overlay) {\n                var markerJS = args[args.length - 1];\n                var markerId_1 = markerJS.getId();\n                var markerCluster = _objectInstance;\n                overlay = new Marker(markerCluster.getMap(), markerJS);\n                _objectInstance.getMap().get('_overlays')[markerId_1] = overlay;\n                markerJS.one(markerJS.getId() + '_remove', function () {\n                    _objectInstance.getMap().get('_overlays')[markerId_1] = null;\n                    delete _objectInstance.getMap().get('_overlays')[markerId_1];\n                });\n            }\n            args[args.length - 1] = overlay;\n        }\n        else {\n            args[args.length - 1] = _objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n        }\n    }\n    return args;\n};\nvar ɵ1 = normalizeArgumentsOfEventListener;\nvar BaseClass = /** @class */ (function () {\n    function BaseClass(objInstance) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (!objInstance) {\n                objInstance = new (GoogleMaps.getPlugin().BaseClass)();\n            }\n            this._objectInstance = objInstance;\n        }\n        else {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before executing any methods.');\n        }\n    }\n    BaseClass.prototype.addEventListener = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return new rxjs__WEBPACK_IMPORTED_MODULE_1__[\"Observable\"](function (observer) {\n                    _this._objectInstance.addEventListener(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addEventListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                console.warn('[GoogleMaps] \"addListenerOnce\" is deprecated. Please use \"addEventListenerOnce\".');\n                return _this.addEventListenerOnce(eventName);\n            }\n        })();\n    };\n    BaseClass.prototype.get = function (key) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"get\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.set = function (key, value, noNotify) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"set\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.bindTo = function (key, target, targetKey, noNotify) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"bindTo\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.on = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return new rxjs__WEBPACK_IMPORTED_MODULE_1__[\"Observable\"](function (observer) {\n                    _this._objectInstance.on(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.one = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.hasEventListener = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"hasEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.empty = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.trigger = function (eventName) {\n        var parameters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parameters[_i - 1] = arguments[_i];\n        }\n        return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"trigger\", { \"sync\": true }, arguments);\n    };\n    BaseClass.prototype.destroy = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"destroy\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.removeEventListener = function (eventName, listener) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"removeEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.off = function (eventName, listener) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"off\", { \"sync\": true }, arguments); };\n    BaseClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseClass.pluginName = \"GoogleMaps\";\n    BaseClass.pluginRef = \"plugin.google.maps.BaseClass\";\n    BaseClass.repo = \"\";\n    BaseClass = __decorate([\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseClass);\n    return BaseClass;\n}());\n\nvar BaseArrayClass = /** @class */ (function (_super) {\n    __extends(BaseArrayClass, _super);\n    function BaseArrayClass(initialData) {\n        var _this = this;\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\n            _this = _super.call(this, initialData) || this;\n        }\n        else if (Array.isArray(initialData)) {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)(initialData)) || this;\n        }\n        else {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)([])) || this;\n        }\n        return _this;\n    }\n    BaseArrayClass.prototype.empty = function (noNotify) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.forEach = function (fn) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"forEach\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @return {Promise<void>}\n     */\n    BaseArrayClass.prototype.forEachAsync = function (fn) {\n        var _this = this;\n        return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve) {\n            _this._objectInstance.forEach(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.map = function (fn) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"map\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapAsync = function (fn) {\n        var _this = this;\n        return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve) {\n            _this._objectInstance.map(fn, resolve);\n        });\n    };\n    /**\n     * Same as `mapAsync`, but keep the execution order\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapSeries = function (fn) {\n        var _this = this;\n        return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve) {\n            _this._objectInstance.mapSeries(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.filter = function (fn) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"filter\", { \"sync\": true }, arguments); };\n    /**\n     * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<T[]>} returns a new filtered array\n     */\n    BaseArrayClass.prototype.filterAsync = function (fn) {\n        var _this = this;\n        return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve) {\n            _this._objectInstance.filter(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.getArray = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getArray\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getAt = function (index) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getLength = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getLength\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.indexOf = function (element) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"indexOf\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.reverse = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"reverse\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.sort = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"sort\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.insertAt = function (index, element, noNotify) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"insertAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.pop = function (noNotify) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"pop\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.push = function (element, noNotify) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"push\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.removeAt = function (index, noNotify) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"removeAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.setAt = function (index, element, noNotify) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.pluginName = \"BaseArrayClass\";\n    BaseArrayClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseArrayClass.pluginRef = \"plugin.google.maps.BaseArrayClass\";\n    BaseArrayClass = __decorate([\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseArrayClass);\n    return BaseArrayClass;\n}(BaseClass));\n\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Circle.prototype.getId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Circle.prototype.getMap = function () {\n        return this._map;\n    };\n    Circle.prototype.setCenter = function (latLng) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getCenter = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getRadius = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setRadius = function (radius) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setFillColor = function (color) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getFillColor = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeWidth = function (strokeWidth) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeWidth = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeColor = function (strokeColor) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeColor = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setClickable = function (clickable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.getClickable = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.setZIndex = function (zIndex) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.getZIndex = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    Circle.prototype.getBounds = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getBounds\", { \"sync\": true }, arguments); };\n    Circle.prototype.setVisible = function (visible) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Circle.prototype.getVisible = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getVisible\", { \"sync\": true }, arguments); };\n    return Circle;\n}(BaseClass));\n\nvar Environment = /** @class */ (function () {\n    function Environment() {\n    }\n    /**\n     * Set environment variables.\n     */\n    Environment.setEnv = function (envOptions) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setEnv(envOptions);\n    };\n    /**\n     * Get the open source software license information for Google Maps SDK for iOS.\n     * @return {Promise<any>}\n     */\n    Environment.getLicenseInfo = function () {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve) {\n            GoogleMaps.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });\n        });\n    };\n    /**\n     * Specifies the background color of the app.\n     * @param color\n     */\n    Environment.setBackgroundColor = function (color) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setBackgroundColor(color);\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.getLicenseInfo()\n     * @hidden\n     */\n    Environment.prototype.getLicenseInfo = function () {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');\n        return Environment.getLicenseInfo();\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.setBackgroundColor()\n     * @hidden\n     */\n    Environment.prototype.setBackgroundColor = function (color) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');\n        Environment.setBackgroundColor(color);\n    };\n    Environment.plugin = \"cordova-plugin-googlemaps\";\n    Environment.pluginName = \"GoogleMaps\";\n    Environment.pluginRef = \"plugin.google.maps.environment\";\n    Environment.repo = \"\";\n    Environment = __decorate([], Environment);\n    return Environment;\n}());\n\nvar Geocoder = /** @class */ (function () {\n    function Geocoder() {\n    }\n    /**\n     * @deprecation This method is static. Please use Geocoder.geocode()\n     * @hidden\n     */\n    Geocoder.prototype.geocode = function (request) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');\n        return Geocoder.geocode(request);\n    };\n    /**\n     * Converts position to address and vice versa\n     * @param {GeocoderRequest} request Request object with either an address or a position\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n     */\n    Geocoder.geocode = function (request) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        if (request.address instanceof Array || Array.isArray(request.address) ||\n            request.position instanceof Array || Array.isArray(request.position)) {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: [\n            //    \"Kyoto, Japan\",\n            //    \"Tokyo, Japan\"\n            //   ]\n            // })\n            // -------------------------\n            return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\n                    if (mvcArray) {\n                        resolve(new BaseArrayClass(mvcArray));\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n        else {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: \"Kyoto, Japan\"\n            // })\n            // -------------------------\n            return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\n                    if (results) {\n                        resolve(results);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n    };\n    Geocoder.pluginName = \"GoogleMaps\";\n    Geocoder.pluginRef = \"plugin.google.maps.Geocoder\";\n    Geocoder.plugin = \"cordova-plugin-googlemaps\";\n    Geocoder.repo = \"\";\n    Geocoder = __decorate([], Geocoder);\n    return Geocoder;\n}());\n\nvar LocationService = /** @class */ (function () {\n    function LocationService() {\n    }\n    /**\n     * Get the current device location without map\n     * @return {Promise<MyLocation>}\n     */\n    LocationService.getMyLocation = function (options) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Return true if the application has geolocation permission\n     * @return {Promise<boolean>}\n     */\n    LocationService.hasPermission = function () {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.hasPermission(resolve, reject);\n        });\n    };\n    LocationService.pluginName = \"GoogleMaps\";\n    LocationService.pluginRef = \"plugin.google.maps.LocationService\";\n    LocationService.plugin = \"cordova-plugin-googlemaps\";\n    LocationService.repo = \"\";\n    LocationService = __decorate([], LocationService);\n    return LocationService;\n}());\n\nvar Encoding = /** @class */ (function () {\n    function Encoding() {\n    }\n    /**\n     * Decodes an encoded path string into a sequence of LatLngs.\n     * @param encoded {string} an encoded path string\n     * @param precision? {number} default: 5\n     * @return {LatLng}\n     */\n    Encoding.decodePath = function (encoded, precision) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.decodePath(encoded, precision);\n    };\n    /**\n     * Encodes a sequence of LatLngs into an encoded path string.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n     * @return {string}\n     */\n    Encoding.encodePath = function (path) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.encodePath(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.decodePath()\n     * @hidden\n     */\n    Encoding.prototype.decodePath = function (encoded, precision) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');\n        return Encoding.decodePath(encoded, precision);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.encodePath()\n     * @hidden\n     */\n    Encoding.prototype.encodePath = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');\n        return Encoding.encodePath(path);\n    };\n    Encoding.pluginName = \"GoogleMaps\";\n    Encoding.pluginRef = \"plugin.google.maps.geometry.encoding\";\n    Encoding.plugin = \"cordova-plugin-googlemaps\";\n    Encoding.repo = \"\";\n    Encoding = __decorate([], Encoding);\n    return Encoding;\n}());\n\nvar Poly = /** @class */ (function () {\n    function Poly() {\n    }\n    /**\n     * Returns true if the specified location is in the polygon path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.containsLocation = function (location, path) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.containsLocation(location, path);\n    };\n    /**\n     * Returns true if the specified location is on the polyline path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.isLocationOnEdge = function (location, path) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.isLocationOnEdge(location, path);\n    };\n    Poly.pluginName = \"GoogleMaps\";\n    Poly.pluginRef = \"plugin.google.maps.geometry.poly\";\n    Poly.plugin = \"cordova-plugin-googlemaps\";\n    Poly.repo = \"\";\n    Poly = __decorate([], Poly);\n    return Poly;\n}());\n\nvar Spherical = /** @class */ (function () {\n    function Spherical() {\n    }\n    /**\n     * Returns the distance, in meters, between two LatLngs.\n     * @param locationA {ILatLng}\n     * @param locationB {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeDistanceBetween = function (from, to) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n     * @param from {ILatLng}\n     * @param distance {number}\n     * @param heading {number}\n     * @return {LatLng}\n     */\n    Spherical.computeOffset = function (from, distance, heading) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n     * @param to {ILatLng} The destination LatLng.\n     * @param distance {number} The distance travelled, in meters.\n     * @param heading {number} The heading in degrees clockwise from north.\n     * @return {LatLng}\n     */\n    Spherical.computeOffsetOrigin = function (to, distance, heading) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * Returns the length of the given path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n     * @return {number}\n     */\n    Spherical.computeLength = function (path) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeArea = function (path) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeSignedArea = function (path) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeSignedArea(path);\n    };\n    /**\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n     * @param from {ILatLng}\n     * @param to {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeHeading = function (from, to) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeHeading(from, to);\n    };\n    /**\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n     * @param from {ILatLng}     The LatLng from which to start.\n     * @param to {ILatLng}       The LatLng toward which to travel.\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n     * @return {LatLng}\n     */\n    Spherical.interpolate = function (from, to, fraction) {\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.interpolate(from, to, fraction);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n     * @hidden\n     */\n    Spherical.prototype.computeDistanceBetween = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');\n        return Spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffset()\n     * @hidden\n     */\n    Spherical.prototype.computeOffset = function (from, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');\n        return Spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n     * @hidden\n     */\n    Spherical.prototype.computeOffsetOrigin = function (to, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');\n        return Spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeLength()\n     * @hidden\n     */\n    Spherical.prototype.computeLength = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');\n        return Spherical.computeLength(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeArea()\n     * @hidden\n     */\n    Spherical.prototype.computeArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');\n        return Spherical.computeArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeSignedArea()\n     * @hidden\n     */\n    Spherical.prototype.computeSignedArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');\n        return Spherical.computeSignedArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeHeading()\n     * @hidden\n     */\n    Spherical.prototype.computeHeading = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');\n        return Spherical.computeHeading(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.interpolate()\n     * @hidden\n     */\n    Spherical.prototype.interpolate = function (from, to, fraction) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');\n        return Spherical.interpolate(from, to, fraction);\n    };\n    Spherical.pluginName = \"GoogleMaps\";\n    Spherical.pluginRef = \"plugin.google.maps.geometry.spherical\";\n    Spherical.plugin = \"cordova-plugin-googlemaps\";\n    Spherical.repo = \"\";\n    Spherical = __decorate([], Spherical);\n    return Spherical;\n}());\n\nvar StreetViewPanorama = /** @class */ (function (_super) {\n    __extends(StreetViewPanorama, _super);\n    function StreetViewPanorama(element, options) {\n        var _this = this;\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // -------------------\n            // Create a panorama\n            // -------------------\n            if (element instanceof HTMLElement) {\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n        return _this;\n    }\n    StreetViewPanorama.prototype.setPov = function (pov) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setPov\", {}, arguments); };\n    StreetViewPanorama.prototype.setPosition = function (cameraPosition) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setPosition\", {}, arguments); };\n    StreetViewPanorama.prototype.setPanningGesturesEnabled = function (gestureEnable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanningGesturesEnabled = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setZoomGesturesEnabled = function (gestureEnable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getZoomGesturesEnabled = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setStreetNamesEnabled = function (gestureEnable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getStreetNamesEnabled = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setNavigationEnabled = function (gestureEnable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getNavigationEnabled = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLinks = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getLinks\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLocation = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getLocation\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanoId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getPanoId\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPosition = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getPosition\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    var _a, _b;\n    StreetViewPanorama.pluginName = \"StreetViewPanorama\";\n    StreetViewPanorama.plugin = \"cordova-plugin-googlemaps\";\n    StreetViewPanorama = __decorate([\n        __metadata(\"design:paramtypes\", [Object, typeof (_b = typeof StreetViewOptions !== \"undefined\" && StreetViewOptions) === \"function\" ? _b : Object])\n    ], StreetViewPanorama);\n    return StreetViewPanorama;\n}(BaseClass));\n\nvar GoogleMap = /** @class */ (function (_super) {\n    __extends(GoogleMap, _super);\n    function GoogleMap(element, options, __timeout) {\n        var _this = this;\n        if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"checkAvailability\"])(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // ---------------\n            // Create a map\n            // ---------------\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, __timeout == null ? 100 : __timeout);\n                }), options)) || this;\n            }\n            else if (element === null && options) {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(null, options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            console.error(errorMessage.join(''));\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n        }\n        return _this;\n    }\n    GoogleMap.prototype.setDiv = function (domNode) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                if (!domNode) {\n                    _this._objectInstance.setDiv();\n                    return;\n                }\n                if (typeof domNode === 'string') {\n                    (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                        var i, targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + domNode));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                resolve(targets[0]);\n                                return;\n                            }\n                        }\n                        reject('Can not find [#' + domNode + '] element');\n                    }))\n                        .then(function (element) {\n                        _this._objectInstance.setDiv(element);\n                    });\n                }\n                else {\n                    if (domNode instanceof HTMLElement &&\n                        !domNode.offsetParent &&\n                        domNode.offsetWidth >= 100 && domNode.offsetHeight >= 100) {\n                        _this._objectInstance.setDiv(domNode);\n                    }\n                    else {\n                        throw new Error(domNode.tagName + ' is too small. Must be bigger than 100x100.');\n                    }\n                }\n            }\n        })();\n    };\n    GoogleMap.prototype.getDiv = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getDiv\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMapTypeId = function (mapTypeId) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setMapTypeId\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.animateCamera = function (cameraPosition) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"animateCamera\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomIn = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"animateCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomOut = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"animateCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.moveCamera = function (cameraPosition) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"moveCamera\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomIn = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"moveCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomOut = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"moveCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.getCameraPosition = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getCameraPosition\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTarget = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraZoom = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraBearing = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTilt = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTarget = function (latLng) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraZoom = function (zoomLevel) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTilt = function (tiltAngle) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraBearing = function (bearing) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.panBy = function (x, y) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"panBy\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getVisibleRegion = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getVisibleRegion\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getMyLocation = function (options) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getMyLocation\", {}, arguments); };\n    GoogleMap.prototype.setClickable = function (isClickable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    GoogleMap.prototype.clear = function () {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                if (_this.get('_overlays')) {\n                    Object.keys(_this.get('_overlays')).forEach(function (overlayId) {\n                        _this.get('_overlays')[overlayId] = null;\n                        delete _this.get('_overlays')[overlayId];\n                    });\n                }\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve) {\n                    _this._objectInstance.clear(function () { return resolve(); });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.fromLatLngToPoint = function (latLng) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"fromLatLngToPoint\", {}, arguments); };\n    GoogleMap.prototype.fromPointToLatLng = function (point) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"fromPointToLatLng\", {}, arguments); };\n    GoogleMap.prototype.setMyLocationEnabled = function (enabled) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setMyLocationEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMyLocationButtonEnabled = function (enabled) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setMyLocationButtonEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getFocusedBuilding = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getFocusedBuilding\", {}, arguments); };\n    GoogleMap.prototype.setIndoorEnabled = function (enabled) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setIndoorEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setTrafficEnabled = function (enabled) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setTrafficEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCompassEnabled = function (enabled) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setCompassEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setAllGesturesEnabled = function (enabled) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setAllGesturesEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setVisible = function (visible) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setPadding = function (top, right, bottom, left) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setPadding\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setOptions = function (options) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setOptions\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.addMarker = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    _this._objectInstance.addMarker(options, function (marker) {\n                        if (marker) {\n                            var overlayId_1 = marker.getId();\n                            var overlay_1 = new Marker(_this, marker);\n                            _this.get('_overlays')[overlayId_1] = overlay_1;\n                            marker.one(overlayId_1 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_1] = null;\n                                    overlay_1.destroy();\n                                }\n                            });\n                            resolve(overlay_1);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                var marker = _this._objectInstance.addMarker(options);\n                var overlayId = marker.getId();\n                var overlay = new Marker(_this, marker);\n                _this.get('_overlays')[overlayId] = overlay;\n                marker.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerCluster = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\n                        if (markerCluster) {\n                            var overlayId_2 = markerCluster.getId();\n                            var overlay_2 = new MarkerCluster(_this, markerCluster);\n                            _this.get('_overlays')[overlayId_2] = overlay_2;\n                            markerCluster.one('remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_2] = null;\n                                    overlay_2.destroy();\n                                }\n                            });\n                            markerCluster.set('_overlays', new BaseArrayClass());\n                            resolve(overlay_2);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerClusterSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                var markerCluster = _this._objectInstance.addMarkerCluster(options);\n                var overlayId = markerCluster.getId();\n                var overlay = new MarkerCluster(_this, markerCluster);\n                _this.get('_overlays')[overlayId] = overlay;\n                markerCluster.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                markerCluster.set('_overlays', new BaseArrayClass());\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircle = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    _this._objectInstance.addCircle(options, function (circle) {\n                        if (circle) {\n                            var overlayId_3 = circle.getId();\n                            var overlay_3 = new Circle(_this, circle);\n                            _this.get('_overlays')[overlayId_3] = overlay_3;\n                            circle.one(overlayId_3 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_3] = null;\n                                    overlay_3.destroy();\n                                }\n                            });\n                            resolve(overlay_3);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircleSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                var circle = _this._objectInstance.addCircle(options);\n                var overlayId = circle.getId();\n                var overlay = new Circle(_this, circle);\n                _this.get('_overlays')[overlayId] = overlay;\n                circle.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygon = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    _this._objectInstance.addPolygon(options, function (polygon) {\n                        if (polygon) {\n                            var overlayId_4 = polygon.getId();\n                            var overlay_4 = new Polygon(_this, polygon);\n                            _this.get('_overlays')[overlayId_4] = overlay_4;\n                            polygon.one(overlayId_4 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_4] = null;\n                                    overlay_4.destroy();\n                                }\n                            });\n                            resolve(overlay_4);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygonSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                var polygon = _this._objectInstance.addPolygon(options);\n                var overlayId = polygon.getId();\n                var overlay = new Polygon(_this, polygon);\n                _this.get('_overlays')[overlayId] = overlay;\n                polygon.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolyline = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    _this._objectInstance.addPolyline(options, function (polyline) {\n                        if (polyline) {\n                            var overlayId_5 = polyline.getId();\n                            var overlay_5 = new Polyline(_this, polyline);\n                            _this.get('_overlays')[overlayId_5] = overlay_5;\n                            polyline.one(overlayId_5 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_5] = null;\n                                    overlay_5.destroy();\n                                }\n                            });\n                            resolve(overlay_5);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolylineSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                var polyline = _this._objectInstance.addPolyline(options);\n                var overlayId = polyline.getId();\n                var overlay = new Polyline(_this, polyline);\n                _this.get('_overlays')[overlayId] = overlay;\n                polyline.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\n                        if (tileOverlay) {\n                            var overlayId_6 = tileOverlay.getId();\n                            var overlay_6 = new TileOverlay(_this, tileOverlay);\n                            _this.get('_overlays')[overlayId_6] = overlay_6;\n                            tileOverlay.one(overlayId_6 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_6] = null;\n                                    overlay_6.destroy();\n                                }\n                            });\n                            resolve(overlay_6);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                var tileOverlay = _this._objectInstance.addTileOverlay(options);\n                var overlayId = tileOverlay.getId();\n                var overlay = new TileOverlay(_this, tileOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                tileOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\n                        if (groundOverlay) {\n                            var overlayId_7 = groundOverlay.getId();\n                            var overlay_7 = new GroundOverlay(_this, groundOverlay);\n                            _this.get('_overlays')[overlayId_7] = overlay_7;\n                            groundOverlay.one(overlayId_7 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_7] = null;\n                                    overlay_7.destroy();\n                                }\n                            });\n                            resolve(overlay_7);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                var groundOverlay = _this._objectInstance.addGroundOverlay(options);\n                var overlayId = groundOverlay.getId();\n                var overlay = new GroundOverlay(_this, groundOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                groundOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addKmlOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"instanceAvailability\"])(_this) === true) {\n                return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"getPromise\"])(function (resolve, reject) {\n                    _this._objectInstance.addKmlOverlay(options, function (kmlOverlay) {\n                        if (kmlOverlay) {\n                            var overlayId_8 = kmlOverlay.getId();\n                            var overlay_8 = new KmlOverlay(_this, kmlOverlay);\n                            _this.get('_overlays')[overlayId_8] = overlay_8;\n                            kmlOverlay.one(overlayId_8 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_8] = null;\n                                    overlay_8.destroy();\n                                }\n                            });\n                            resolve(overlay_8);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.toDataURL = function (options) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"toDataURL\", {}, arguments); };\n    var _c, _d;\n    GoogleMap.pluginName = \"GoogleMaps\";\n    GoogleMap.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMap = __decorate([\n        __metadata(\"design:paramtypes\", [Object, typeof (_d = typeof GoogleMapOptions !== \"undefined\" && GoogleMapOptions) === \"function\" ? _d : Object, Number])\n    ], GoogleMap);\n    return GoogleMap;\n}(BaseClass));\n\nvar GroundOverlay = /** @class */ (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    GroundOverlay.prototype.getId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    GroundOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    GroundOverlay.prototype.setBounds = function (bounds) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setBounds\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setBearing = function (bearing) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getBearing = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setImage = function (imageUrl) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setImage\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setOpacity = function (opacity) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getOpacity = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setClickable = function (clickable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getClickable = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setVisible = function (visible) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getVisible = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setZIndex = function (index) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getZIndex = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    return GroundOverlay;\n}(BaseClass));\n\nvar HtmlInfoWindow = /** @class */ (function (_super) {\n    __extends(HtmlInfoWindow, _super);\n    function HtmlInfoWindow() {\n        return _super.call(this, new (GoogleMaps.getPlugin().HtmlInfoWindow)()) || this;\n    }\n    HtmlInfoWindow.prototype.setBackgroundColor = function (color) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setBackgroundColor\", {}, arguments); };\n    HtmlInfoWindow.prototype.setContent = function (content, cssOptions) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setContent\", {}, arguments); };\n    HtmlInfoWindow.prototype.open = function (marker) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"open\", {}, arguments); };\n    HtmlInfoWindow.prototype.close = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"close\", {}, arguments); };\n    HtmlInfoWindow.plugin = \"cordova-plugin-googlemaps\";\n    HtmlInfoWindow.pluginName = \"GoogleMaps\";\n    HtmlInfoWindow.pluginRef = \"plugin.google.maps.HtmlInfoWindow\";\n    HtmlInfoWindow.repo = \"\";\n    HtmlInfoWindow = __decorate([\n        __metadata(\"design:paramtypes\", [])\n    ], HtmlInfoWindow);\n    return HtmlInfoWindow;\n}(BaseClass));\n\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Marker.prototype.getId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Marker.prototype.getMap = function () {\n        return this._map;\n    };\n    Marker.prototype.setPosition = function (latLng) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.getPosition = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.showInfoWindow = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"showInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.hideInfoWindow = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"hideInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.setAnimation = function (animation) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setAnimation\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDisableAutoPan = function (disableAutoPan) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setDisableAutoPan\", { \"sync\": true }, arguments); };\n    Marker.prototype.setVisible = function (visible) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.isVisible = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"isVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.setTitle = function (title) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.getTitle = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.setSnippet = function (snippet) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.getSnippet = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.setOpacity = function (alpha) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.getOpacity = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    Marker.prototype.setIconAnchor = function (x, y) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setIconAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.setInfoWindowAnchor = function (x, y) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setInfoWindowAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.isInfoWindowShown = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"isInfoWindowShown\", { \"sync\": true }, arguments); };\n    Marker.prototype.setZIndex = function (zIndex) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.getZIndex = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDraggable = function (draggable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.isDraggable = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"isDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.setFlat = function (flat) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setFlat\", { \"sync\": true }, arguments); };\n    Marker.prototype.setIcon = function (icon) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setIcon\", { \"sync\": true }, arguments); };\n    Marker.prototype.setRotation = function (rotation) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setRotation\", { \"sync\": true }, arguments); };\n    Marker.prototype.getRotation = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getRotation\", { \"sync\": true }, arguments); };\n    return Marker;\n}(BaseClass));\n\nvar MarkerCluster = /** @class */ (function (_super) {\n    __extends(MarkerCluster, _super);\n    function MarkerCluster(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    MarkerCluster.prototype.getId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getId\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarker = function (marker) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"addMarker\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarkers = function (markers) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"addMarkers\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    MarkerCluster.prototype.getMap = function () {\n        return this._map;\n    };\n    return MarkerCluster;\n}(BaseClass));\n\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polygon.prototype.getId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polygon.prototype.getMap = function () {\n        return this._map;\n    };\n    Polygon.prototype.setPoints = function (points) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polygon.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polygon.prototype.setHoles = function (holes) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setHoles\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the holes.\n     * @return {BaseArrayClass<ILatLng[]>}\n     */\n    Polygon.prototype.getHoles = function () {\n        var holes = this._objectInstance.getPoints();\n        var results = new BaseArrayClass();\n        holes.forEach(function (hole) {\n            results.push(hole);\n        });\n        return results;\n    };\n    Polygon.prototype.setFillColor = function (fillColor) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getFillColor = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setStrokeColor = function (strokeColor) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeColor = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setClickable = function (clickable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getClickable = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setVisible = function (visible) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getVisible = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setZIndex = function (zIndex) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getZIndex = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    Polygon.prototype.setStrokeWidth = function (strokeWidth) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeWidth = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setGeodesic = function (geodesic) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setGeodesic\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getGeodesic = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    return Polygon;\n}(BaseClass));\n\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polyline.prototype.getId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polyline.prototype.getMap = function () {\n        return this._map;\n    };\n    Polyline.prototype.setPoints = function (points) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polyline.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polyline.prototype.setGeoDesic = function (geoDesic) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setGeoDesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getGeodesic = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setVisible = function (visible) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getVisible = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setClickable = function (clickable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getClickable = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeColor = function (strokeColor) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeColor = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeWidth = function (strokeWidth) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeWidth = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setZIndex = function (index) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getZIndex = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    return Polyline;\n}(BaseClass));\n\nvar TileOverlay = /** @class */ (function (_super) {\n    __extends(TileOverlay, _super);\n    function TileOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    TileOverlay.prototype.getId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    TileOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    TileOverlay.prototype.setFadeIn = function (fadeIn) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getFadeIn = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setZIndex = function (zIndex) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getZIndex = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setOpacity = function (opacity) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getOpacity = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setVisible = function (visible) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getVisible = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getTileSize = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getTileSize\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    return TileOverlay;\n}(BaseClass));\n\nvar KmlOverlay = /** @class */ (function (_super) {\n    __extends(KmlOverlay, _super);\n    function KmlOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        Object.defineProperty(self, 'camera', {\n            value: _this._objectInstance.camera,\n            writable: false\n        });\n        Object.defineProperty(self, 'kmlData', {\n            value: _this._objectInstance.kmlData,\n            writable: false\n        });\n        return _this;\n    }\n    KmlOverlay.prototype.getDefaultViewport = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getDefaultViewport\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getId = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    KmlOverlay.prototype.getMap = function () { return this._map; };\n    KmlOverlay.prototype.setVisible = function (visible) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getVisible = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.setClickable = function (clickable) { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"setClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getClickable = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"getClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.remove = function () { return Object(_ionic_native_core__WEBPACK_IMPORTED_MODULE_0__[\"cordovaInstance\"])(this, \"remove\", {}, arguments); };\n    return KmlOverlay;\n}(BaseClass));\n\n\n//# sourceMappingURL=data:application/json;base64,\n\n/***/ }),\n\n/***/ \"./node_modules/raw-loader/dist/cjs.js!./src/app/pages/lugares/lugares.page.html\":\n/*!***************************************************************************************!*\\\n  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/lugares/lugares.page.html ***!\n  \\***************************************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"/app/tabs/inicio\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <ion-select id=\\\"custom-background-select\\\" [(ngModel)]=\\\"municipioSelected\\\" (ionChange)=\\\"buscarLugaresMunicipio()\\\" [interfaceOptions]=\\\"customActionSheetOptions\\\" interface=\\\"popover\\\" class=\\\"form-control\\\" cancelText=\\\"Cancelar\\\" placeholder=\\\"\\\" required>\\n        <ion-select-option [value]=\\\"municipio\\\" *ngFor=\\\"let municipio of municipios\\\">{{municipio.nombre}}</ion-select-option>\\n      </ion-select>\\n    </ion-title>\\n    <!--<ion-buttons slot=\\\"end\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"locate\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>--> \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div id=\\\"map_canvas\\\">\\n\\n    <ion-grid class=\\\"grid-bottom-page\\\">\\n      <ion-row>\\n        <ion-col class=\\\"col-align-center\\\">\\n          <ion-slides #slides (ionSlideWillChange)=\\\"onSlideChangeStart($event)\\\" [options]=\\\"slideOptions\\\" id=\\\"slide-lugares\\\" pager=\\\"true\\\">\\n            <ion-slide class=\\\"slide-lugar\\\" *ngFor=\\\"let lugar of lugaresMunicipioSelected; let i=index\\\">\\n              <ion-card mode=\\\"ios\\\" class=\\\"card-lugar\\\">\\n              <ion-card-header>\\n                <ion-card-title>{{lugar.Nombre}}</ion-card-title>\\n                <ion-card-subtitle>{{lugar.Direccion}}</ion-card-subtitle>\\n              </ion-card-header>\\n            \\n              <ion-card-content>\\n                <p>{{lugar.Servicios}}</p>\\n                <p>{{lugar.Horario}}</p>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-button shape=\\\"round\\\" color=\\\"primary\\\" (click)=\\\"abrirNavegacionLugar(lugar)\\\">\\n                      <ion-icon slot=\\\"start\\\" src=\\\"../../../assets/icons/directions.svg\\\"></ion-icon>\\n                      Indicaciones\\n                    </ion-button>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-card-content>\\n            </ion-card>\\n            </ion-slide>\\n          </ion-slides>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\");\n\n/***/ }),\n\n/***/ \"./src/app/pages/lugares/lugares-routing.module.ts\":\n/*!*********************************************************!*\\\n  !*** ./src/app/pages/lugares/lugares-routing.module.ts ***!\n  \\*********************************************************/\n/*! exports provided: LugaresPageRoutingModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LugaresPageRoutingModule\", function() { return LugaresPageRoutingModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ \"./node_modules/@angular/router/fesm2015/router.js\");\n/* harmony import */ var _lugares_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lugares.page */ \"./src/app/pages/lugares/lugares.page.ts\");\n\n\n\n\nconst routes = [\n    {\n        path: '',\n        component: _lugares_page__WEBPACK_IMPORTED_MODULE_3__[\"LugaresPage\"]\n    }\n];\nlet LugaresPageRoutingModule = class LugaresPageRoutingModule {\n};\nLugaresPageRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__[\"RouterModule\"].forChild(routes)],\n        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__[\"RouterModule\"]],\n    })\n], LugaresPageRoutingModule);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/pages/lugares/lugares.module.ts\":\n/*!*************************************************!*\\\n  !*** ./src/app/pages/lugares/lugares.module.ts ***!\n  \\*************************************************/\n/*! exports provided: LugaresPageModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LugaresPageModule\", function() { return LugaresPageModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm2015/common.js\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ \"./node_modules/@angular/forms/fesm2015/forms.js\");\n/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic/angular */ \"./node_modules/@ionic/angular/dist/fesm5.js\");\n/* harmony import */ var _lugares_routing_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lugares-routing.module */ \"./src/app/pages/lugares/lugares-routing.module.ts\");\n/* harmony import */ var _lugares_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lugares.page */ \"./src/app/pages/lugares/lugares.page.ts\");\n\n\n\n\n\n\n\nlet LugaresPageModule = class LugaresPageModule {\n};\nLugaresPageModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        imports: [\n            _angular_common__WEBPACK_IMPORTED_MODULE_2__[\"CommonModule\"],\n            _angular_forms__WEBPACK_IMPORTED_MODULE_3__[\"FormsModule\"],\n            _ionic_angular__WEBPACK_IMPORTED_MODULE_4__[\"IonicModule\"],\n            _lugares_routing_module__WEBPACK_IMPORTED_MODULE_5__[\"LugaresPageRoutingModule\"]\n        ],\n        declarations: [_lugares_page__WEBPACK_IMPORTED_MODULE_6__[\"LugaresPage\"]]\n    })\n], LugaresPageModule);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/pages/lugares/lugares.page.scss\":\n/*!*************************************************!*\\\n  !*** ./src/app/pages/lugares/lugares.page.scss ***!\n  \\*************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#map_canvas {\\n  height: 100%;\\n}\\n\\n.grid-bottom-page {\\n  position: absolute;\\n  bottom: -20px;\\n  width: 100%;\\n}\\n\\n.card-lugar {\\n  --background: var(--ion-color-light) !important;\\n  text-align: start;\\n  width: 100%;\\n}\\n\\n/*.slide-lugar {\\n    margin-bottom: 10px !important;\\n}*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZnJhaW4vSW9uaWNQcm9qZWN0cy9TRUZJTk1vdmlsL3NyYy9hcHAvcGFnZXMvbHVnYXJlcy9sdWdhcmVzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvbHVnYXJlcy9sdWdhcmVzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsYUFBQTtFQUVBLFdBQUE7QUNBSjs7QURHQTtFQUNJLCtDQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0FDQUo7O0FESUE7O0VBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sdWdhcmVzL2x1Z2FyZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21hcF9jYW52YXMge1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLmdyaWQtYm90dG9tLXBhZ2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IC0yMHB4O1xuICAgIC8vYm90dG9tOiAyMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4uY2FyZC1sdWdhciB7XG4gICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLy9wYWRkaW5nOiAwIDAgMTVweCAwO1xufVxuXG4vKi5zbGlkZS1sdWdhciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweCAhaW1wb3J0YW50O1xufSovIiwiI21hcF9jYW52YXMge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5ncmlkLWJvdHRvbS1wYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IC0yMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhcmQtbHVnYXIge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1saWdodCkgIWltcG9ydGFudDtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKi5zbGlkZS1sdWdhciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweCAhaW1wb3J0YW50O1xufSovIl19 */\");\n\n/***/ }),\n\n/***/ \"./src/app/pages/lugares/lugares.page.ts\":\n/*!***********************************************!*\\\n  !*** ./src/app/pages/lugares/lugares.page.ts ***!\n  \\***********************************************/\n/*! exports provided: LugaresPage */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LugaresPage\", function() { return LugaresPage; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _services_lugares_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/lugares.service */ \"./src/app/services/lugares.service.ts\");\n/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ionic/angular */ \"./node_modules/@ionic/angular/dist/fesm5.js\");\n/* harmony import */ var _services_toast_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/toast.service */ \"./src/app/services/toast.service.ts\");\n/* harmony import */ var _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic-native/geolocation/ngx */ \"./node_modules/@ionic-native/geolocation/ngx/index.js\");\n/* harmony import */ var _ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ionic-native/native-geocoder/ngx */ \"./node_modules/@ionic-native/native-geocoder/ngx/index.js\");\n/* harmony import */ var _ionic_native_google_maps_ngx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ionic-native/google-maps/ngx */ \"./node_modules/@ionic-native/google-maps/ngx/index.js\");\n/* harmony import */ var _services_loading_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/loading.service */ \"./src/app/services/loading.service.ts\");\n/* harmony import */ var _ionic_native_launch_navigator_ngx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ionic-native/launch-navigator/ngx */ \"./node_modules/@ionic-native/launch-navigator/ngx/index.js\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm2015/common.js\");\n/* harmony import */ var _map_dark_style__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./map-dark-style */ \"./src/app/pages/lugares/map-dark-style.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nlet LugaresPage = class LugaresPage {\n    constructor(doc, lugaresService, geolocation, platform, toastService, nativeGeocoder, loadingService, launchNavigator) {\n        this.doc = doc;\n        this.lugaresService = lugaresService;\n        this.geolocation = geolocation;\n        this.platform = platform;\n        this.toastService = toastService;\n        this.nativeGeocoder = nativeGeocoder;\n        this.loadingService = loadingService;\n        this.launchNavigator = launchNavigator;\n        this.customActionSheetOptions = {\n        //header: 'Municipios'\n        };\n        this.slideOptions = {\n            initialSlide: 0,\n            centeredSlides: true,\n            loop: true\n        };\n        this.ubicacionActualExito = false;\n        this.geocoderOptions = {\n            useLocale: true,\n            maxResults: 5\n        };\n        this.cargandoLugares = false;\n        this.marcasLugaresPago = [];\n        this.ultimaMarcaLugarSeleccionado = 0;\n    }\n    ngOnInit() {\n        this.platform.ready().then(() => {\n            this.municipios = this.lugaresService.getMunicipios();\n            this.lugaresPrueba = this.lugaresService.getLugaresPrueba();\n            this.municipioSelected = this.municipios[1]; //capital campeche\n            setTimeout(() => {\n                this.inicializarMapa();\n                this.setEstiloMapa();\n                this.buscarLugaresMunicipio();\n                //this.obtenerPosicionActualUsuario();\n            }, 200);\n        });\n    }\n    /**\n     * Inicializacion del mapa en la posicion seleccionada\n     */\n    inicializarMapa() {\n        /// This code is necessary for browser\n        _ionic_native_google_maps_ngx__WEBPACK_IMPORTED_MODULE_7__[\"Environment\"].setEnv({\n            'API_KEY_FOR_BROWSER_RELEASE': 'AIzaSyDJxtizfmmnhBASqy8rt_ioQ3NjLO_XbJQ',\n            'API_KEY_FOR_BROWSER_DEBUG': 'AIzaSyDJxtizfmmnhBASqy8rt_ioQ3NjLO_XbJQ'\n        });\n        let mapOptions = {\n            camera: {\n                target: {\n                    lat: this.municipioSelected.lat,\n                    lng: this.municipioSelected.lng\n                },\n                zoom: 15,\n            },\n            mapType: _ionic_native_google_maps_ngx__WEBPACK_IMPORTED_MODULE_7__[\"GoogleMapsMapTypeId\"].ROADMAP,\n            toolbar: true,\n            controls: {\n                'compass': true,\n                'myLocationButton': true,\n                'myLocation': true,\n                'indoorPicker': true,\n                'zoom': false,\n                'mapToolbar': false // android only\n            }\n        };\n        this.map = _ionic_native_google_maps_ngx__WEBPACK_IMPORTED_MODULE_7__[\"GoogleMaps\"].create('map_canvas', mapOptions);\n    }\n    /**\n     * Establecer estilo actual al mapa\n     */\n    setEstiloMapa() {\n        const appEl = this.doc.querySelector('ion-app');\n        let style = [];\n        if (appEl.classList.contains('dark-theme')) {\n            style = _map_dark_style__WEBPACK_IMPORTED_MODULE_11__[\"darkStyle\"];\n            this.map.setOptions({ styles: style });\n        }\n        else {\n            this.map.setOptions({ styles: [] });\n        }\n    }\n    /**\n     * Centrar mapa en base a la localidad seleccionada\n     */\n    buscarLugaresMunicipio() {\n        this.lugaresMunicipioSelected = [];\n        this.marcasLugaresPago = [];\n        this.cargandoLugares = true;\n        this.loadingService.present();\n        if (this.map)\n            this.map.clear();\n        //centrar maps\n        console.log(\"Nuevo municipio seleccionado: \", this.municipioSelected);\n        this.map.animateCamera({\n            target: {\n                lat: this.municipioSelected.lat,\n                lng: this.municipioSelected.lng\n            },\n            zoom: 15,\n            //tilt: 30,\n            duration: 1000\n        });\n        //simular carga lugares de pago\n        setTimeout(() => {\n            this.lugaresMunicipioSelected = this.lugaresPrueba.filter((elem) => {\n                return elem.IdMunicipio === this.municipioSelected.id;\n            });\n            if (this.lugaresMunicipioSelected.length > 0) {\n                console.log(\"Lugares de pago municipio: \" + JSON.stringify(this.lugaresMunicipioSelected, null));\n                //dibujamos lugares de pago\n                this.marcarLugaresPagoMunicipioSeleccionado(this.lugaresMunicipioSelected);\n                this.cargandoLugares = false;\n                this.loadingService.dismiss();\n            }\n            else {\n                console.log(\"No se encontraron lugares de pago para el municipio seleccionado\");\n                this.cargandoLugares = false;\n                this.loadingService.dismiss();\n            }\n        }, 500);\n    }\n    /**\n     * Marcar en el mapa los lugares de pago del municipio seleccionado\n     * @param lugares\n     */\n    marcarLugaresPagoMunicipioSeleccionado(lugares) {\n        if (lugares.length > 0) {\n            lugares.forEach((lugar, i) => {\n                this.marcasLugaresPago.push(new LugarPago(i, lugar, lugar.Lat, lugar.Lng, this.map, this.slides));\n                if (i === 0) {\n                    this.marcasLugaresPago[i].seleccionado(this.map, this.slides);\n                    this.ultimaMarcaLugarSeleccionado = i;\n                }\n            });\n        }\n    }\n    /**\n     * Seleccionar lugar de pago en base al slide seleccionado\n     * @param event\n     */\n    onSlideChangeStart(event) {\n        event.target.isEnd().then(isEnd => {\n            this.slides.getActiveIndex().then(index => {\n                if (index >= 0) {\n                    this.marcasLugaresPago[this.ultimaMarcaLugarSeleccionado].noSeleccionado();\n                    this.marcasLugaresPago[index].seleccionado(this.map, this.slides);\n                    this.ultimaMarcaLugarSeleccionado = index;\n                }\n            });\n        });\n    }\n    /**\n     * Abrir navegacion google maps hacia el destino seleccionado\n     * @param destino\n     */\n    abrirNavegacionLugar(destino) {\n        console.log(\"Intentando navegar hacia destino..\");\n        console.log(destino);\n        let options = {\n            app: this.launchNavigator.APP.GOOGLE_MAPS\n        };\n        try {\n            this.launchNavigator.isAppAvailable(this.launchNavigator.APP.GOOGLE_MAPS).then(isAvailable => {\n                if (isAvailable) {\n                    this.launchNavigator.navigate([destino.Lat, destino.Lng], options).then(success => {\n                        console.log(\"Navegador lanzado correctamente\");\n                    }, error => {\n                        console.log(\"Error lanzando navegador\", error);\n                        this.toastService.info(\"Ocurrió un problema al intentar navegar al destino seleccionado. Intente mas tarde.\");\n                    });\n                }\n                else {\n                    this.toastService.info(\"Google Maps no se encuentra disponible en su dispositivo. Intente mas tarde.\");\n                }\n            }, err => {\n                console.log(\"Error lanzando navegador\", err);\n                this.toastService.info(\"Ocurrió un problema al intentar navegar al destino seleccionado. Intente mas tarde.\");\n            });\n        }\n        catch (e) {\n            console.log(\"Error lanzando navegador\", e);\n            this.toastService.info(\"Ocurrió un problema al intentar navegar al destino seleccionado. Intente mas tarde.\");\n        }\n    }\n    /**\n     * Solicitar la ubicacion actual del usuario\n     */\n    obtenerPosicionActualUsuario() {\n        this.geolocation.getCurrentPosition().then((resp) => {\n            console.log(\"Ubicacion actual: \", resp);\n            this.posicionActual = resp;\n            if (this.posicionActual) {\n                this.decodificarPosicionActualUsuario();\n            }\n        }).catch((error) => {\n            console.log('Error al obtener la ubicación', error);\n            this.toastService.info('No fue posible acceder a su ubicación actual');\n        });\n    }\n    /**\n     * Decodificar latitud longitud para obtener los datos de la\n     * ubicacion del usuario\n     */\n    decodificarPosicionActualUsuario() {\n        this.nativeGeocoder.reverseGeocode(this.posicionActual.coords.latitude, this.posicionActual.coords.longitude, this.geocoderOptions)\n            .then((result) => {\n            console.log(\"Detalles ubicacion actual: \");\n            console.log(JSON.stringify(result[0]));\n            alert(JSON.stringify(result[0]));\n            if (result && result.length > 0) {\n                this.ubicacionActualExito = true;\n            }\n        })\n            .catch((error) => {\n            console.log('Error al decodificar la ubicación actual', error);\n            this.toastService.info('No fue posible acceder a su ubicación actual');\n        });\n    }\n};\nLugaresPage.ctorParameters = () => [\n    { type: Document, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_10__[\"DOCUMENT\"],] }] },\n    { type: _services_lugares_service__WEBPACK_IMPORTED_MODULE_2__[\"LugaresService\"] },\n    { type: _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_5__[\"Geolocation\"] },\n    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__[\"Platform\"] },\n    { type: _services_toast_service__WEBPACK_IMPORTED_MODULE_4__[\"ToastService\"] },\n    { type: _ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_6__[\"NativeGeocoder\"] },\n    { type: _services_loading_service__WEBPACK_IMPORTED_MODULE_8__[\"LoadingService\"] },\n    { type: _ionic_native_launch_navigator_ngx__WEBPACK_IMPORTED_MODULE_9__[\"LaunchNavigator\"] }\n];\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ViewChild\"])('slides', { static: true }),\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:type\", _ionic_angular__WEBPACK_IMPORTED_MODULE_3__[\"IonSlides\"])\n], LugaresPage.prototype, \"slides\", void 0);\nLugaresPage = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Component\"])({\n        selector: 'lugares',\n        template: tslib__WEBPACK_IMPORTED_MODULE_0__[\"__importDefault\"](__webpack_require__(/*! raw-loader!./lugares.page.html */ \"./node_modules/raw-loader/dist/cjs.js!./src/app/pages/lugares/lugares.page.html\")).default,\n        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__[\"__importDefault\"](__webpack_require__(/*! ./lugares.page.scss */ \"./src/app/pages/lugares/lugares.page.scss\")).default]\n    }),\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__param\"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Inject\"])(_angular_common__WEBPACK_IMPORTED_MODULE_10__[\"DOCUMENT\"])),\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [Document,\n        _services_lugares_service__WEBPACK_IMPORTED_MODULE_2__[\"LugaresService\"],\n        _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_5__[\"Geolocation\"],\n        _ionic_angular__WEBPACK_IMPORTED_MODULE_3__[\"Platform\"],\n        _services_toast_service__WEBPACK_IMPORTED_MODULE_4__[\"ToastService\"],\n        _ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_6__[\"NativeGeocoder\"],\n        _services_loading_service__WEBPACK_IMPORTED_MODULE_8__[\"LoadingService\"],\n        _ionic_native_launch_navigator_ngx__WEBPACK_IMPORTED_MODULE_9__[\"LaunchNavigator\"]])\n], LugaresPage);\n\nclass LugarPago {\n    constructor(index, lugar, lat, lng, map, slides) {\n        this.index = index;\n        this.lat = lat;\n        this.lng = lng;\n        this.marker = map.addMarkerSync({\n            //title: lugar.Nombre,\n            //snippet: lugar.Servicios,\n            animation: \"DROP\",\n            icon: {\n                url: \"./assets/icons/place.png\",\n                size: {\n                    width: 25,\n                    height: 25\n                }\n            },\n            position: {\n                lat: this.lat,\n                lng: this.lng\n            }\n        });\n        this.marker.on(_ionic_native_google_maps_ngx__WEBPACK_IMPORTED_MODULE_7__[\"GoogleMapsEvent\"].MARKER_CLICK).subscribe(() => {\n            this.clickMarker(slides);\n        });\n    }\n    /**\n     * Cuando se selecciona una marca\n     * @param slides\n     */\n    clickMarker(slides) {\n        //actualizar slide\n        slides.slideTo(this.index, 200);\n    }\n    /**\n     * Cuando se actualiza el slide\n     * @param map\n     */\n    seleccionado(map, slides) {\n        //centrar\n        let position = this.marker.getPosition();\n        map.animateCamera({\n            target: {\n                lat: position.lat,\n                lng: position.lng\n            },\n            duration: 200\n        });\n        //icono\n        this.marker.setIcon({\n            url: './assets/icons/marker-selected.png',\n            size: {\n                width: 20,\n                height: 35\n            }\n        });\n        //animacion\n        this.marker.setAnimation(\"DROP\");\n        //info\n        //this.marker.showInfoWindow();\n    }\n    /**\n     * Cuando se deselecciona una marca\n     */\n    noSeleccionado() {\n        this.marker.setIcon({\n            url: './assets/icons/place.png',\n            size: {\n                width: 25,\n                height: 25\n            }\n        });\n    }\n    /**\n     * Obtener indice de la marca\n     */\n    getIndex() {\n        return this.index;\n    }\n}\n\n\n/***/ }),\n\n/***/ \"./src/app/pages/lugares/map-dark-style.js\":\n/*!*************************************************!*\\\n  !*** ./src/app/pages/lugares/map-dark-style.js ***!\n  \\*************************************************/\n/*! exports provided: darkStyle */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"darkStyle\", function() { return darkStyle; });\nconst darkStyle = [\n  {\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#242f3e\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#746855\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#242f3e\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative.locality\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#263c3f\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#6b9a76\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#38414e\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#212a37\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#9ca5b3\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#746855\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#1f2835\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#f3d19c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#2f3948\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit.station\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#17263c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#515c6d\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#17263c\"\n      }\n    ]\n  }\n]\n\n/***/ }),\n\n/***/ \"./src/app/services/lugares.service.ts\":\n/*!*********************************************!*\\\n  !*** ./src/app/services/lugares.service.ts ***!\n  \\*********************************************/\n/*! exports provided: LugaresService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LugaresService\", function() { return LugaresService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ \"./node_modules/@angular/common/fesm2015/http.js\");\n/* harmony import */ var _app_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../app.config */ \"./src/app/app.config.ts\");\n\n\n\n\nconst httpOptions = {\n    headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpHeaders\"]({\n        'Content-Type': 'application/json'\n    })\n};\nconst appConfig = Object(_app_config__WEBPACK_IMPORTED_MODULE_3__[\"AppConfig\"])();\nlet LugaresService = class LugaresService {\n    constructor(http) {\n        this.http = http;\n    }\n    /**\n    * Obtener catálogo municipios\n    */\n    getMunicipios() {\n        return [\n            {\n                id: 1,\n                nombre: \"Calkiní\",\n                lat: 20.3708555,\n                lng: -90.05046829999998\n            },\n            {\n                id: 2,\n                nombre: \"Campeche\",\n                lat: 19.830125,\n                lng: -90.5349086111111\n            },\n            {\n                id: 3,\n                nombre: \"Carmen\",\n                lat: 18.6504879,\n                lng: -91.80745860000002\n            },\n            {\n                id: 4,\n                nombre: \"Champotón\",\n                lat: 19.3471645,\n                lng: -90.72002370000001\n            },\n            {\n                id: 5,\n                nombre: \"Hecelchakán\",\n                lat: 20.1819021,\n                lng: -90.13545859999999\n            },\n            {\n                id: 6,\n                nombre: \"Hopelchén\",\n                lat: 19.7472419,\n                lng: -89.84246439999998\n            },\n            {\n                id: 7,\n                nombre: \"Palizada\",\n                lat: 18.2545777,\n                lng: -92.09147989999997\n            },\n            {\n                id: 8,\n                nombre: \"Tenabo\",\n                lat: 20.0409674,\n                lng: -90.22555190000003\n            },\n            {\n                id: 9,\n                nombre: \"Escárcega\",\n                lat: 18.6101834,\n                lng: -90.73902450000003\n            },\n            {\n                id: 10,\n                nombre: \"Calakmul\",\n                lat: 18.5054461,\n                lng: -89.3935247\n            },\n            {\n                id: 11,\n                nombre: \"Candelaria\",\n                lat: 18.1845319,\n                lng: -91.0418568\n            }\n        ];\n    }\n    /**\n     * Modulos de pago prueba\n     */\n    getLugaresPrueba() {\n        return [\n            {\n                IdMunicipio: 2,\n                Nombre: \"SEAFI Campeche\",\n                Direccion: \"Calle 49-C o Circuito Baluartes N° 39 entre Calle Ciriaco Vázquez, Barrio de Guadalupe, Zona Centro, 24000 Campeche, Camp.\",\n                Servicios: \"Servicios Financieros Campeche\",\n                Horario: \"Lunes a Viernes de 8:00 a 16:00\",\n                Lat: 19.8455045,\n                Lng: -90.5353135\n            },\n            {\n                IdMunicipio: 2,\n                Nombre: \"Servicio De Administración Fiscal\",\n                Direccion: \"Calle 49C 39, Barrio de Guadalupe, 24010 Campeche, Camp.\",\n                Servicios: \"Servicios Financieros Campeche\",\n                Horario: \"Lunes a Viernes de 8:00 a 16:00\",\n                Lat: 19.8439067,\n                Lng: -90.5346504\n            },\n            {\n                IdMunicipio: 2,\n                Nombre: \"Secretaría de Finanzas Campeche\",\n                Direccion: \"Calle 8, Zona Centro, 24000 Campeche, Camp.\",\n                Servicios: \"Servicios Financieros Campeche\",\n                Horario: \"Lunes a Viernes de 8:00 a 20:00\",\n                Lat: 19.840483,\n                Lng: -90.536803\n            },\n            {\n                IdMunicipio: 2,\n                Nombre: \"Secretaría de Administración e Innovación Gubernamental\",\n                Direccion: \"Calle 8 325, Zona Centro, 24000 Campeche, Camp.\",\n                Servicios: \"Servicios Financieros Campeche\",\n                Horario: \"Lunes a Viernes de 8:00 a 16:00\",\n                Lat: 19.8451439,\n                Lng: -90.5420417\n            },\n            {\n                IdMunicipio: 4,\n                Nombre: \"SECRETARIA DE FINANZAS OFICINA RECAUDADORA\",\n                Direccion: \"Calle 1 #17, Venustiano Carranza, 24400 Champotón, Camp.\",\n                Servicios: \"Servicios Financieros Campeche\",\n                Horario: \"Lunes a Viernes de 8:00 a 14:30\",\n                Lat: 19.356353,\n                Lng: -90.723960\n            },\n            {\n                IdMunicipio: 1,\n                Nombre: \"Palacio Municipal de Calkini\",\n                Direccion: \"S/N, entre y, Calle 17 & Calle 20, Centro, Calkiní, Camp.\",\n                Servicios: \"Servicios Financieros Campeche\",\n                Horario: \"Lunes a Viernes de 8:00 a 14:30\",\n                Lat: 20.3704588,\n                Lng: -90.0581788\n            }\n        ];\n    }\n};\nLugaresService.ctorParameters = () => [\n    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"] }\n];\nLugaresService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])({\n        providedIn: 'root'\n    }),\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__metadata\"](\"design:paramtypes\", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"]])\n], LugaresService);\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=pages-lugares-lugares-module-es2015.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _this = this;\nimport { IonicNativePlugin, instanceAvailability, cordovaInstance, instancePropertyGet, instancePropertySet, checkAvailability, getPromise } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nvar TARGET_ELEMENT_FINDING_QUERYS = [\n    '.show-page #',\n    'ion-router-outlet[main] #',\n    '#'\n];\nvar LatLng = /** @class */ (function () {\n    function LatLng(lat, lng) {\n        this.lat = lat;\n        this.lng = lng;\n    }\n    LatLng.prototype.equals = function (other) {\n        return this.lat === other.lat && this.lng === other.lng;\n    };\n    LatLng.prototype.toString = function () {\n        return this.lat + ',' + this.lng;\n    };\n    LatLng.prototype.toUrlValue = function (precision) {\n        precision = precision || 6;\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n    };\n    return LatLng;\n}());\nexport { LatLng };\nvar LatLngBounds = /** @class */ (function () {\n    function LatLngBounds(points) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\n    }\n    LatLngBounds.prototype.toString = function () { return cordovaInstance(this, \"toString\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.toUrlValue = function (precision) { return cordovaInstance(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.extend = function (LatLng) { return cordovaInstance(this, \"extend\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.contains = function (LatLng) { return cordovaInstance(this, \"contains\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.getCenter = function () { return cordovaInstance(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Object.defineProperty(LatLngBounds.prototype, \"northeast\", {\n        get: function () { return instancePropertyGet(this, \"northeast\"); },\n        set: function (value) { instancePropertySet(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"southwest\", {\n        get: function () { return instancePropertyGet(this, \"southwest\"); },\n        set: function (value) { instancePropertySet(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"type\", {\n        get: function () { return instancePropertyGet(this, \"type\"); },\n        set: function (value) { instancePropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return LatLngBounds;\n}());\nexport { LatLngBounds };\nvar VisibleRegion = /** @class */ (function () {\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\n    }\n    VisibleRegion.prototype.toString = function () { return cordovaInstance(this, \"toString\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.toUrlValue = function (precision) { return cordovaInstance(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.contains = function (LatLng) { return cordovaInstance(this, \"contains\", { \"sync\": true }, arguments); };\n    Object.defineProperty(VisibleRegion.prototype, \"northeast\", {\n        get: function () { return instancePropertyGet(this, \"northeast\"); },\n        set: function (value) { instancePropertySet(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"southwest\", {\n        get: function () { return instancePropertyGet(this, \"southwest\"); },\n        set: function (value) { instancePropertySet(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farLeft\", {\n        get: function () { return instancePropertyGet(this, \"farLeft\"); },\n        set: function (value) { instancePropertySet(this, \"farLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farRight\", {\n        get: function () { return instancePropertyGet(this, \"farRight\"); },\n        set: function (value) { instancePropertySet(this, \"farRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearLeft\", {\n        get: function () { return instancePropertyGet(this, \"nearLeft\"); },\n        set: function (value) { instancePropertySet(this, \"nearLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearRight\", {\n        get: function () { return instancePropertyGet(this, \"nearRight\"); },\n        set: function (value) { instancePropertySet(this, \"nearRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"type\", {\n        get: function () { return instancePropertyGet(this, \"type\"); },\n        set: function (value) { instancePropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return VisibleRegion;\n}());\nexport { VisibleRegion };\n/**\n * @hidden\n */\nexport var StreetViewSource = {\n    DEFAULT: 'DEFAULT',\n    OUTDOOR: 'OUTDOOR'\n};\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nexport var GoogleMapsEvent = {\n    MAP_READY: 'map_ready',\n    MAP_CLICK: 'map_click',\n    MAP_LONG_CLICK: 'map_long_click',\n    POI_CLICK: 'poi_click',\n    MY_LOCATION_CLICK: 'my_location_click',\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n    CAMERA_MOVE_START: 'camera_move_start',\n    CAMERA_MOVE: 'camera_move',\n    CAMERA_MOVE_END: 'camera_move_end',\n    OVERLAY_CLICK: 'overlay_click',\n    POLYGON_CLICK: 'polygon_click',\n    POLYLINE_CLICK: 'polyline_click',\n    CIRCLE_CLICK: 'circle_click',\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\n    INFO_CLICK: 'info_click',\n    INFO_LONG_CLICK: 'info_long_click',\n    INFO_CLOSE: 'info_close',\n    INFO_OPEN: 'info_open',\n    MARKER_CLICK: 'marker_click',\n    MARKER_DRAG: 'marker_drag',\n    MARKER_DRAG_START: 'marker_drag_start',\n    MARKER_DRAG_END: 'marker_drag_end',\n    MAP_DRAG: 'map_drag',\n    MAP_DRAG_START: 'map_drag_start',\n    MAP_DRAG_END: 'map_drag_end',\n    KML_CLICK: 'kml_click',\n    PANORAMA_READY: 'panorama_ready',\n    PANORAMA_CAMERA_CHANGE: 'panorama_camera_change',\n    PANORAMA_LOCATION_CHANGE: 'panorama_location_change',\n    PANORAMA_CLICK: 'panorama_click'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsAnimation = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsMapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\nvar GoogleMaps = /** @class */ (function (_super) {\n    __extends(GoogleMaps, _super);\n    function GoogleMaps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new GoogleMap instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {GoogleMapOptions} [options] Options\n     * @return {GoogleMap}\n     */\n    GoogleMaps.create = function (element, options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            else if (typeof element === 'object') {\n                options = element;\n                element = null;\n            }\n            var googleMap = new GoogleMap(element, options);\n            googleMap.set('_overlays', {});\n            return googleMap;\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    /**\n     * @deprecation keep this for backward compatibility.\n     * @hidden\n     */\n    GoogleMaps.prototype.create = function (element, options) {\n        console.error('GoogleMaps', '[deprecated] Please use GoogleMaps.create()');\n        return GoogleMaps.create(element, options);\n    };\n    /**\n     * Creates a new StreetView instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {StreetViewOptions} [options] Options\n     * @return {StreetViewPanorama}\n     */\n    GoogleMaps.createPanorama = function (element, options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            return new StreetViewPanorama(element, options);\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    GoogleMaps.pluginName = \"GoogleMaps\";\n    GoogleMaps.pluginRef = \"plugin.google.maps\";\n    GoogleMaps.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMaps.repo = \"https://github.com/mapsplugin/cordova-plugin-googlemaps\";\n    GoogleMaps.document = \"https://ionicframework.com/docs/native/google-maps/\";\n    GoogleMaps.install = \"ionic cordova plugin add cordova-plugin-googlemaps --variable API_KEY_FOR_ANDROID=\\\"YOUR_ANDROID_API_KEY_IS_HERE\\\" --variable API_KEY_FOR_IOS=\\\"YOUR_IOS_API_KEY_IS_HERE\\\"\";\n    GoogleMaps.installVariables = [\"API_KEY_FOR_ANDROID\", \"API_KEY_FOR_IOS\"];\n    GoogleMaps.platforms = [\"Android\", \"iOS\", \"Browser\"];\n    GoogleMaps = __decorate([], GoogleMaps);\n    return GoogleMaps;\n}(IonicNativePlugin));\nexport { GoogleMaps };\nvar displayErrorMessage = function (element, message) {\n    var errorDiv = document.createElement('div');\n    errorDiv.innerHTML = message;\n    errorDiv.style.color = 'red';\n    errorDiv.style.position = 'absolute';\n    errorDiv.style.width = '80%';\n    errorDiv.style.height = '50%';\n    errorDiv.style.top = '0px';\n    errorDiv.style.bottom = '0px';\n    errorDiv.style.right = '0px';\n    errorDiv.style.left = '0px';\n    errorDiv.style.padding = '0px';\n    errorDiv.style.margin = 'auto';\n    element.style.position = 'relative';\n    element.style.backgroundColor = '#ccc7';\n    element.appendChild(errorDiv);\n};\nvar ɵ0 = displayErrorMessage;\nvar normalizeArgumentsOfEventListener = function (_objectInstance, args) {\n    if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n        if (args[args.length - 1].type === 'Map' || args[args.length - 1].type === 'StreetViewPanorama') {\n            args[args.length - 1] = _this;\n        }\n        else if (_objectInstance.__pgmId.indexOf('markercluster_') !== -1) {\n            var _overlays = _objectInstance.getMap().get('_overlays') || {};\n            var overlay = _overlays[args[args.length - 1].getId()];\n            if (!overlay) {\n                var markerJS = args[args.length - 1];\n                var markerId_1 = markerJS.getId();\n                var markerCluster = _objectInstance;\n                overlay = new Marker(markerCluster.getMap(), markerJS);\n                _objectInstance.getMap().get('_overlays')[markerId_1] = overlay;\n                markerJS.one(markerJS.getId() + '_remove', function () {\n                    _objectInstance.getMap().get('_overlays')[markerId_1] = null;\n                    delete _objectInstance.getMap().get('_overlays')[markerId_1];\n                });\n            }\n            args[args.length - 1] = overlay;\n        }\n        else {\n            args[args.length - 1] = _objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n        }\n    }\n    return args;\n};\nvar ɵ1 = normalizeArgumentsOfEventListener;\nvar BaseClass = /** @class */ (function () {\n    function BaseClass(objInstance) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (!objInstance) {\n                objInstance = new (GoogleMaps.getPlugin().BaseClass)();\n            }\n            this._objectInstance = objInstance;\n        }\n        else {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before executing any methods.');\n        }\n    }\n    BaseClass.prototype.addEventListener = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.addEventListener(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addEventListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                console.warn('[GoogleMaps] \"addListenerOnce\" is deprecated. Please use \"addEventListenerOnce\".');\n                return _this.addEventListenerOnce(eventName);\n            }\n        })();\n    };\n    BaseClass.prototype.get = function (key) { return cordovaInstance(this, \"get\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.set = function (key, value, noNotify) { return cordovaInstance(this, \"set\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.bindTo = function (key, target, targetKey, noNotify) { return cordovaInstance(this, \"bindTo\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.on = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.on(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.one = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.hasEventListener = function () { return cordovaInstance(this, \"hasEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.empty = function () { return cordovaInstance(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.trigger = function (eventName) {\n        var parameters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parameters[_i - 1] = arguments[_i];\n        }\n        return cordovaInstance(this, \"trigger\", { \"sync\": true }, arguments);\n    };\n    BaseClass.prototype.destroy = function () { return cordovaInstance(this, \"destroy\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.removeEventListener = function (eventName, listener) { return cordovaInstance(this, \"removeEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.off = function (eventName, listener) { return cordovaInstance(this, \"off\", { \"sync\": true }, arguments); };\n    BaseClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseClass.pluginName = \"GoogleMaps\";\n    BaseClass.pluginRef = \"plugin.google.maps.BaseClass\";\n    BaseClass.repo = \"\";\n    BaseClass = __decorate([\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseClass);\n    return BaseClass;\n}());\nexport { BaseClass };\nvar BaseArrayClass = /** @class */ (function (_super) {\n    __extends(BaseArrayClass, _super);\n    function BaseArrayClass(initialData) {\n        var _this = this;\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\n            _this = _super.call(this, initialData) || this;\n        }\n        else if (Array.isArray(initialData)) {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)(initialData)) || this;\n        }\n        else {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)([])) || this;\n        }\n        return _this;\n    }\n    BaseArrayClass.prototype.empty = function (noNotify) { return cordovaInstance(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.forEach = function (fn) { return cordovaInstance(this, \"forEach\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @return {Promise<void>}\n     */\n    BaseArrayClass.prototype.forEachAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.forEach(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.map = function (fn) { return cordovaInstance(this, \"map\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.map(fn, resolve);\n        });\n    };\n    /**\n     * Same as `mapAsync`, but keep the execution order\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapSeries = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.mapSeries(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.filter = function (fn) { return cordovaInstance(this, \"filter\", { \"sync\": true }, arguments); };\n    /**\n     * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<T[]>} returns a new filtered array\n     */\n    BaseArrayClass.prototype.filterAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.filter(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.getArray = function () { return cordovaInstance(this, \"getArray\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getAt = function (index) { return cordovaInstance(this, \"getAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getLength = function () { return cordovaInstance(this, \"getLength\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.indexOf = function (element) { return cordovaInstance(this, \"indexOf\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.reverse = function () { return cordovaInstance(this, \"reverse\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.sort = function () { return cordovaInstance(this, \"sort\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.insertAt = function (index, element, noNotify) { return cordovaInstance(this, \"insertAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.pop = function (noNotify) { return cordovaInstance(this, \"pop\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.push = function (element, noNotify) { return cordovaInstance(this, \"push\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.removeAt = function (index, noNotify) { return cordovaInstance(this, \"removeAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.setAt = function (index, element, noNotify) { return cordovaInstance(this, \"setAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.pluginName = \"BaseArrayClass\";\n    BaseArrayClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseArrayClass.pluginRef = \"plugin.google.maps.BaseArrayClass\";\n    BaseArrayClass = __decorate([\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseArrayClass);\n    return BaseArrayClass;\n}(BaseClass));\nexport { BaseArrayClass };\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Circle.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Circle.prototype.getMap = function () {\n        return this._map;\n    };\n    Circle.prototype.setCenter = function (latLng) { return cordovaInstance(this, \"setCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getCenter = function () { return cordovaInstance(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getRadius = function () { return cordovaInstance(this, \"getRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setRadius = function (radius) { return cordovaInstance(this, \"setRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setFillColor = function (color) { return cordovaInstance(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getFillColor = function () { return cordovaInstance(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Circle.prototype.getBounds = function () { return cordovaInstance(this, \"getBounds\", { \"sync\": true }, arguments); };\n    Circle.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Circle.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    return Circle;\n}(BaseClass));\nexport { Circle };\nvar Environment = /** @class */ (function () {\n    function Environment() {\n    }\n    /**\n     * Set environment variables.\n     */\n    Environment.setEnv = function (envOptions) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setEnv(envOptions);\n    };\n    /**\n     * Get the open source software license information for Google Maps SDK for iOS.\n     * @return {Promise<any>}\n     */\n    Environment.getLicenseInfo = function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve) {\n            GoogleMaps.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });\n        });\n    };\n    /**\n     * Specifies the background color of the app.\n     * @param color\n     */\n    Environment.setBackgroundColor = function (color) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setBackgroundColor(color);\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.getLicenseInfo()\n     * @hidden\n     */\n    Environment.prototype.getLicenseInfo = function () {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');\n        return Environment.getLicenseInfo();\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.setBackgroundColor()\n     * @hidden\n     */\n    Environment.prototype.setBackgroundColor = function (color) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');\n        Environment.setBackgroundColor(color);\n    };\n    Environment.plugin = \"cordova-plugin-googlemaps\";\n    Environment.pluginName = \"GoogleMaps\";\n    Environment.pluginRef = \"plugin.google.maps.environment\";\n    Environment.repo = \"\";\n    Environment = __decorate([], Environment);\n    return Environment;\n}());\nexport { Environment };\nvar Geocoder = /** @class */ (function () {\n    function Geocoder() {\n    }\n    /**\n     * @deprecation This method is static. Please use Geocoder.geocode()\n     * @hidden\n     */\n    Geocoder.prototype.geocode = function (request) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');\n        return Geocoder.geocode(request);\n    };\n    /**\n     * Converts position to address and vice versa\n     * @param {GeocoderRequest} request Request object with either an address or a position\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n     */\n    Geocoder.geocode = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        if (request.address instanceof Array || Array.isArray(request.address) ||\n            request.position instanceof Array || Array.isArray(request.position)) {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: [\n            //    \"Kyoto, Japan\",\n            //    \"Tokyo, Japan\"\n            //   ]\n            // })\n            // -------------------------\n            return getPromise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\n                    if (mvcArray) {\n                        resolve(new BaseArrayClass(mvcArray));\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n        else {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: \"Kyoto, Japan\"\n            // })\n            // -------------------------\n            return getPromise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\n                    if (results) {\n                        resolve(results);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n    };\n    Geocoder.pluginName = \"GoogleMaps\";\n    Geocoder.pluginRef = \"plugin.google.maps.Geocoder\";\n    Geocoder.plugin = \"cordova-plugin-googlemaps\";\n    Geocoder.repo = \"\";\n    Geocoder = __decorate([], Geocoder);\n    return Geocoder;\n}());\nexport { Geocoder };\nvar LocationService = /** @class */ (function () {\n    function LocationService() {\n    }\n    /**\n     * Get the current device location without map\n     * @return {Promise<MyLocation>}\n     */\n    LocationService.getMyLocation = function (options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Return true if the application has geolocation permission\n     * @return {Promise<boolean>}\n     */\n    LocationService.hasPermission = function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.hasPermission(resolve, reject);\n        });\n    };\n    LocationService.pluginName = \"GoogleMaps\";\n    LocationService.pluginRef = \"plugin.google.maps.LocationService\";\n    LocationService.plugin = \"cordova-plugin-googlemaps\";\n    LocationService.repo = \"\";\n    LocationService = __decorate([], LocationService);\n    return LocationService;\n}());\nexport { LocationService };\nvar Encoding = /** @class */ (function () {\n    function Encoding() {\n    }\n    /**\n     * Decodes an encoded path string into a sequence of LatLngs.\n     * @param encoded {string} an encoded path string\n     * @param precision? {number} default: 5\n     * @return {LatLng}\n     */\n    Encoding.decodePath = function (encoded, precision) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.decodePath(encoded, precision);\n    };\n    /**\n     * Encodes a sequence of LatLngs into an encoded path string.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n     * @return {string}\n     */\n    Encoding.encodePath = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.encodePath(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.decodePath()\n     * @hidden\n     */\n    Encoding.prototype.decodePath = function (encoded, precision) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');\n        return Encoding.decodePath(encoded, precision);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.encodePath()\n     * @hidden\n     */\n    Encoding.prototype.encodePath = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');\n        return Encoding.encodePath(path);\n    };\n    Encoding.pluginName = \"GoogleMaps\";\n    Encoding.pluginRef = \"plugin.google.maps.geometry.encoding\";\n    Encoding.plugin = \"cordova-plugin-googlemaps\";\n    Encoding.repo = \"\";\n    Encoding = __decorate([], Encoding);\n    return Encoding;\n}());\nexport { Encoding };\nvar Poly = /** @class */ (function () {\n    function Poly() {\n    }\n    /**\n     * Returns true if the specified location is in the polygon path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.containsLocation = function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.containsLocation(location, path);\n    };\n    /**\n     * Returns true if the specified location is on the polyline path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.isLocationOnEdge = function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.isLocationOnEdge(location, path);\n    };\n    Poly.pluginName = \"GoogleMaps\";\n    Poly.pluginRef = \"plugin.google.maps.geometry.poly\";\n    Poly.plugin = \"cordova-plugin-googlemaps\";\n    Poly.repo = \"\";\n    Poly = __decorate([], Poly);\n    return Poly;\n}());\nexport { Poly };\nvar Spherical = /** @class */ (function () {\n    function Spherical() {\n    }\n    /**\n     * Returns the distance, in meters, between two LatLngs.\n     * @param locationA {ILatLng}\n     * @param locationB {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeDistanceBetween = function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n     * @param from {ILatLng}\n     * @param distance {number}\n     * @param heading {number}\n     * @return {LatLng}\n     */\n    Spherical.computeOffset = function (from, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n     * @param to {ILatLng} The destination LatLng.\n     * @param distance {number} The distance travelled, in meters.\n     * @param heading {number} The heading in degrees clockwise from north.\n     * @return {LatLng}\n     */\n    Spherical.computeOffsetOrigin = function (to, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * Returns the length of the given path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n     * @return {number}\n     */\n    Spherical.computeLength = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeArea = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeSignedArea = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeSignedArea(path);\n    };\n    /**\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n     * @param from {ILatLng}\n     * @param to {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeHeading = function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeHeading(from, to);\n    };\n    /**\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n     * @param from {ILatLng}     The LatLng from which to start.\n     * @param to {ILatLng}       The LatLng toward which to travel.\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n     * @return {LatLng}\n     */\n    Spherical.interpolate = function (from, to, fraction) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.interpolate(from, to, fraction);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n     * @hidden\n     */\n    Spherical.prototype.computeDistanceBetween = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');\n        return Spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffset()\n     * @hidden\n     */\n    Spherical.prototype.computeOffset = function (from, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');\n        return Spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n     * @hidden\n     */\n    Spherical.prototype.computeOffsetOrigin = function (to, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');\n        return Spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeLength()\n     * @hidden\n     */\n    Spherical.prototype.computeLength = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');\n        return Spherical.computeLength(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeArea()\n     * @hidden\n     */\n    Spherical.prototype.computeArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');\n        return Spherical.computeArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeSignedArea()\n     * @hidden\n     */\n    Spherical.prototype.computeSignedArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');\n        return Spherical.computeSignedArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeHeading()\n     * @hidden\n     */\n    Spherical.prototype.computeHeading = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');\n        return Spherical.computeHeading(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.interpolate()\n     * @hidden\n     */\n    Spherical.prototype.interpolate = function (from, to, fraction) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');\n        return Spherical.interpolate(from, to, fraction);\n    };\n    Spherical.pluginName = \"GoogleMaps\";\n    Spherical.pluginRef = \"plugin.google.maps.geometry.spherical\";\n    Spherical.plugin = \"cordova-plugin-googlemaps\";\n    Spherical.repo = \"\";\n    Spherical = __decorate([], Spherical);\n    return Spherical;\n}());\nexport { Spherical };\nvar StreetViewPanorama = /** @class */ (function (_super) {\n    __extends(StreetViewPanorama, _super);\n    function StreetViewPanorama(element, options) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // -------------------\n            // Create a panorama\n            // -------------------\n            if (element instanceof HTMLElement) {\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(getPromise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n        return _this;\n    }\n    StreetViewPanorama.prototype.setPov = function (pov) { return cordovaInstance(this, \"setPov\", {}, arguments); };\n    StreetViewPanorama.prototype.setPosition = function (cameraPosition) { return cordovaInstance(this, \"setPosition\", {}, arguments); };\n    StreetViewPanorama.prototype.setPanningGesturesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanningGesturesEnabled = function () { return cordovaInstance(this, \"getPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setZoomGesturesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getZoomGesturesEnabled = function () { return cordovaInstance(this, \"getZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setStreetNamesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getStreetNamesEnabled = function () { return cordovaInstance(this, \"getStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setNavigationEnabled = function (gestureEnable) { return cordovaInstance(this, \"setNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getNavigationEnabled = function () { return cordovaInstance(this, \"getNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLinks = function () { return cordovaInstance(this, \"getLinks\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLocation = function () { return cordovaInstance(this, \"getLocation\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanoId = function () { return cordovaInstance(this, \"getPanoId\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPosition = function () { return cordovaInstance(this, \"getPosition\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    var _a, _b;\n    StreetViewPanorama.pluginName = \"StreetViewPanorama\";\n    StreetViewPanorama.plugin = \"cordova-plugin-googlemaps\";\n    StreetViewPanorama = __decorate([\n        __metadata(\"design:paramtypes\", [Object, typeof (_b = typeof StreetViewOptions !== \"undefined\" && StreetViewOptions) === \"function\" ? _b : Object])\n    ], StreetViewPanorama);\n    return StreetViewPanorama;\n}(BaseClass));\nexport { StreetViewPanorama };\nvar GoogleMap = /** @class */ (function (_super) {\n    __extends(GoogleMap, _super);\n    function GoogleMap(element, options, __timeout) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // ---------------\n            // Create a map\n            // ---------------\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(getPromise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, __timeout == null ? 100 : __timeout);\n                }), options)) || this;\n            }\n            else if (element === null && options) {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(null, options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            console.error(errorMessage.join(''));\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n        }\n        return _this;\n    }\n    GoogleMap.prototype.setDiv = function (domNode) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                if (!domNode) {\n                    _this._objectInstance.setDiv();\n                    return;\n                }\n                if (typeof domNode === 'string') {\n                    (getPromise(function (resolve, reject) {\n                        var i, targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + domNode));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                resolve(targets[0]);\n                                return;\n                            }\n                        }\n                        reject('Can not find [#' + domNode + '] element');\n                    }))\n                        .then(function (element) {\n                        _this._objectInstance.setDiv(element);\n                    });\n                }\n                else {\n                    if (domNode instanceof HTMLElement &&\n                        !domNode.offsetParent &&\n                        domNode.offsetWidth >= 100 && domNode.offsetHeight >= 100) {\n                        _this._objectInstance.setDiv(domNode);\n                    }\n                    else {\n                        throw new Error(domNode.tagName + ' is too small. Must be bigger than 100x100.');\n                    }\n                }\n            }\n        })();\n    };\n    GoogleMap.prototype.getDiv = function () { return cordovaInstance(this, \"getDiv\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMapTypeId = function (mapTypeId) { return cordovaInstance(this, \"setMapTypeId\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.animateCamera = function (cameraPosition) { return cordovaInstance(this, \"animateCamera\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomIn = function () { return cordovaInstance(this, \"animateCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomOut = function () { return cordovaInstance(this, \"animateCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.moveCamera = function (cameraPosition) { return cordovaInstance(this, \"moveCamera\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomIn = function () { return cordovaInstance(this, \"moveCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomOut = function () { return cordovaInstance(this, \"moveCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.getCameraPosition = function () { return cordovaInstance(this, \"getCameraPosition\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTarget = function () { return cordovaInstance(this, \"getCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraZoom = function () { return cordovaInstance(this, \"getCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraBearing = function () { return cordovaInstance(this, \"getCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTilt = function () { return cordovaInstance(this, \"getCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTarget = function (latLng) { return cordovaInstance(this, \"setCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraZoom = function (zoomLevel) { return cordovaInstance(this, \"setCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTilt = function (tiltAngle) { return cordovaInstance(this, \"setCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraBearing = function (bearing) { return cordovaInstance(this, \"setCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.panBy = function (x, y) { return cordovaInstance(this, \"panBy\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getVisibleRegion = function () { return cordovaInstance(this, \"getVisibleRegion\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getMyLocation = function (options) { return cordovaInstance(this, \"getMyLocation\", {}, arguments); };\n    GoogleMap.prototype.setClickable = function (isClickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    GoogleMap.prototype.clear = function () {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                if (_this.get('_overlays')) {\n                    Object.keys(_this.get('_overlays')).forEach(function (overlayId) {\n                        _this.get('_overlays')[overlayId] = null;\n                        delete _this.get('_overlays')[overlayId];\n                    });\n                }\n                return getPromise(function (resolve) {\n                    _this._objectInstance.clear(function () { return resolve(); });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.fromLatLngToPoint = function (latLng) { return cordovaInstance(this, \"fromLatLngToPoint\", {}, arguments); };\n    GoogleMap.prototype.fromPointToLatLng = function (point) { return cordovaInstance(this, \"fromPointToLatLng\", {}, arguments); };\n    GoogleMap.prototype.setMyLocationEnabled = function (enabled) { return cordovaInstance(this, \"setMyLocationEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMyLocationButtonEnabled = function (enabled) { return cordovaInstance(this, \"setMyLocationButtonEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getFocusedBuilding = function () { return cordovaInstance(this, \"getFocusedBuilding\", {}, arguments); };\n    GoogleMap.prototype.setIndoorEnabled = function (enabled) { return cordovaInstance(this, \"setIndoorEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setTrafficEnabled = function (enabled) { return cordovaInstance(this, \"setTrafficEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCompassEnabled = function (enabled) { return cordovaInstance(this, \"setCompassEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setAllGesturesEnabled = function (enabled) { return cordovaInstance(this, \"setAllGesturesEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setPadding = function (top, right, bottom, left) { return cordovaInstance(this, \"setPadding\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setOptions = function (options) { return cordovaInstance(this, \"setOptions\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.addMarker = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addMarker(options, function (marker) {\n                        if (marker) {\n                            var overlayId_1 = marker.getId();\n                            var overlay_1 = new Marker(_this, marker);\n                            _this.get('_overlays')[overlayId_1] = overlay_1;\n                            marker.one(overlayId_1 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_1] = null;\n                                    overlay_1.destroy();\n                                }\n                            });\n                            resolve(overlay_1);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var marker = _this._objectInstance.addMarker(options);\n                var overlayId = marker.getId();\n                var overlay = new Marker(_this, marker);\n                _this.get('_overlays')[overlayId] = overlay;\n                marker.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerCluster = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\n                        if (markerCluster) {\n                            var overlayId_2 = markerCluster.getId();\n                            var overlay_2 = new MarkerCluster(_this, markerCluster);\n                            _this.get('_overlays')[overlayId_2] = overlay_2;\n                            markerCluster.one('remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_2] = null;\n                                    overlay_2.destroy();\n                                }\n                            });\n                            markerCluster.set('_overlays', new BaseArrayClass());\n                            resolve(overlay_2);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerClusterSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var markerCluster = _this._objectInstance.addMarkerCluster(options);\n                var overlayId = markerCluster.getId();\n                var overlay = new MarkerCluster(_this, markerCluster);\n                _this.get('_overlays')[overlayId] = overlay;\n                markerCluster.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                markerCluster.set('_overlays', new BaseArrayClass());\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircle = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addCircle(options, function (circle) {\n                        if (circle) {\n                            var overlayId_3 = circle.getId();\n                            var overlay_3 = new Circle(_this, circle);\n                            _this.get('_overlays')[overlayId_3] = overlay_3;\n                            circle.one(overlayId_3 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_3] = null;\n                                    overlay_3.destroy();\n                                }\n                            });\n                            resolve(overlay_3);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircleSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var circle = _this._objectInstance.addCircle(options);\n                var overlayId = circle.getId();\n                var overlay = new Circle(_this, circle);\n                _this.get('_overlays')[overlayId] = overlay;\n                circle.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygon = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addPolygon(options, function (polygon) {\n                        if (polygon) {\n                            var overlayId_4 = polygon.getId();\n                            var overlay_4 = new Polygon(_this, polygon);\n                            _this.get('_overlays')[overlayId_4] = overlay_4;\n                            polygon.one(overlayId_4 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_4] = null;\n                                    overlay_4.destroy();\n                                }\n                            });\n                            resolve(overlay_4);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygonSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var polygon = _this._objectInstance.addPolygon(options);\n                var overlayId = polygon.getId();\n                var overlay = new Polygon(_this, polygon);\n                _this.get('_overlays')[overlayId] = overlay;\n                polygon.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolyline = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addPolyline(options, function (polyline) {\n                        if (polyline) {\n                            var overlayId_5 = polyline.getId();\n                            var overlay_5 = new Polyline(_this, polyline);\n                            _this.get('_overlays')[overlayId_5] = overlay_5;\n                            polyline.one(overlayId_5 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_5] = null;\n                                    overlay_5.destroy();\n                                }\n                            });\n                            resolve(overlay_5);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolylineSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var polyline = _this._objectInstance.addPolyline(options);\n                var overlayId = polyline.getId();\n                var overlay = new Polyline(_this, polyline);\n                _this.get('_overlays')[overlayId] = overlay;\n                polyline.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\n                        if (tileOverlay) {\n                            var overlayId_6 = tileOverlay.getId();\n                            var overlay_6 = new TileOverlay(_this, tileOverlay);\n                            _this.get('_overlays')[overlayId_6] = overlay_6;\n                            tileOverlay.one(overlayId_6 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_6] = null;\n                                    overlay_6.destroy();\n                                }\n                            });\n                            resolve(overlay_6);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var tileOverlay = _this._objectInstance.addTileOverlay(options);\n                var overlayId = tileOverlay.getId();\n                var overlay = new TileOverlay(_this, tileOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                tileOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\n                        if (groundOverlay) {\n                            var overlayId_7 = groundOverlay.getId();\n                            var overlay_7 = new GroundOverlay(_this, groundOverlay);\n                            _this.get('_overlays')[overlayId_7] = overlay_7;\n                            groundOverlay.one(overlayId_7 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_7] = null;\n                                    overlay_7.destroy();\n                                }\n                            });\n                            resolve(overlay_7);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var groundOverlay = _this._objectInstance.addGroundOverlay(options);\n                var overlayId = groundOverlay.getId();\n                var overlay = new GroundOverlay(_this, groundOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                groundOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addKmlOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addKmlOverlay(options, function (kmlOverlay) {\n                        if (kmlOverlay) {\n                            var overlayId_8 = kmlOverlay.getId();\n                            var overlay_8 = new KmlOverlay(_this, kmlOverlay);\n                            _this.get('_overlays')[overlayId_8] = overlay_8;\n                            kmlOverlay.one(overlayId_8 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_8] = null;\n                                    overlay_8.destroy();\n                                }\n                            });\n                            resolve(overlay_8);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.toDataURL = function (options) { return cordovaInstance(this, \"toDataURL\", {}, arguments); };\n    var _c, _d;\n    GoogleMap.pluginName = \"GoogleMaps\";\n    GoogleMap.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMap = __decorate([\n        __metadata(\"design:paramtypes\", [Object, typeof (_d = typeof GoogleMapOptions !== \"undefined\" && GoogleMapOptions) === \"function\" ? _d : Object, Number])\n    ], GoogleMap);\n    return GoogleMap;\n}(BaseClass));\nexport { GoogleMap };\nvar GroundOverlay = /** @class */ (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    GroundOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    GroundOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    GroundOverlay.prototype.setBounds = function (bounds) { return cordovaInstance(this, \"setBounds\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setBearing = function (bearing) { return cordovaInstance(this, \"setBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getBearing = function () { return cordovaInstance(this, \"getBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setImage = function (imageUrl) { return cordovaInstance(this, \"setImage\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setOpacity = function (opacity) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setZIndex = function (index) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return GroundOverlay;\n}(BaseClass));\nexport { GroundOverlay };\nvar HtmlInfoWindow = /** @class */ (function (_super) {\n    __extends(HtmlInfoWindow, _super);\n    function HtmlInfoWindow() {\n        return _super.call(this, new (GoogleMaps.getPlugin().HtmlInfoWindow)()) || this;\n    }\n    HtmlInfoWindow.prototype.setBackgroundColor = function (color) { return cordovaInstance(this, \"setBackgroundColor\", {}, arguments); };\n    HtmlInfoWindow.prototype.setContent = function (content, cssOptions) { return cordovaInstance(this, \"setContent\", {}, arguments); };\n    HtmlInfoWindow.prototype.open = function (marker) { return cordovaInstance(this, \"open\", {}, arguments); };\n    HtmlInfoWindow.prototype.close = function () { return cordovaInstance(this, \"close\", {}, arguments); };\n    HtmlInfoWindow.plugin = \"cordova-plugin-googlemaps\";\n    HtmlInfoWindow.pluginName = \"GoogleMaps\";\n    HtmlInfoWindow.pluginRef = \"plugin.google.maps.HtmlInfoWindow\";\n    HtmlInfoWindow.repo = \"\";\n    HtmlInfoWindow = __decorate([\n        __metadata(\"design:paramtypes\", [])\n    ], HtmlInfoWindow);\n    return HtmlInfoWindow;\n}(BaseClass));\nexport { HtmlInfoWindow };\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Marker.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Marker.prototype.getMap = function () {\n        return this._map;\n    };\n    Marker.prototype.setPosition = function (latLng) { return cordovaInstance(this, \"setPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.getPosition = function () { return cordovaInstance(this, \"getPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.showInfoWindow = function () { return cordovaInstance(this, \"showInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.hideInfoWindow = function () { return cordovaInstance(this, \"hideInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.setAnimation = function (animation) { return cordovaInstance(this, \"setAnimation\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDisableAutoPan = function (disableAutoPan) { return cordovaInstance(this, \"setDisableAutoPan\", { \"sync\": true }, arguments); };\n    Marker.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.isVisible = function () { return cordovaInstance(this, \"isVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.setTitle = function (title) { return cordovaInstance(this, \"setTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.getTitle = function () { return cordovaInstance(this, \"getTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.setSnippet = function (snippet) { return cordovaInstance(this, \"setSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.getSnippet = function () { return cordovaInstance(this, \"getSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.setOpacity = function (alpha) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Marker.prototype.setIconAnchor = function (x, y) { return cordovaInstance(this, \"setIconAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.setInfoWindowAnchor = function (x, y) { return cordovaInstance(this, \"setInfoWindowAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.isInfoWindowShown = function () { return cordovaInstance(this, \"isInfoWindowShown\", { \"sync\": true }, arguments); };\n    Marker.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDraggable = function (draggable) { return cordovaInstance(this, \"setDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.isDraggable = function () { return cordovaInstance(this, \"isDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.setFlat = function (flat) { return cordovaInstance(this, \"setFlat\", { \"sync\": true }, arguments); };\n    Marker.prototype.setIcon = function (icon) { return cordovaInstance(this, \"setIcon\", { \"sync\": true }, arguments); };\n    Marker.prototype.setRotation = function (rotation) { return cordovaInstance(this, \"setRotation\", { \"sync\": true }, arguments); };\n    Marker.prototype.getRotation = function () { return cordovaInstance(this, \"getRotation\", { \"sync\": true }, arguments); };\n    return Marker;\n}(BaseClass));\nexport { Marker };\nvar MarkerCluster = /** @class */ (function (_super) {\n    __extends(MarkerCluster, _super);\n    function MarkerCluster(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    MarkerCluster.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarker = function (marker) { return cordovaInstance(this, \"addMarker\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarkers = function (markers) { return cordovaInstance(this, \"addMarkers\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    MarkerCluster.prototype.getMap = function () {\n        return this._map;\n    };\n    return MarkerCluster;\n}(BaseClass));\nexport { MarkerCluster };\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polygon.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polygon.prototype.getMap = function () {\n        return this._map;\n    };\n    Polygon.prototype.setPoints = function (points) { return cordovaInstance(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polygon.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polygon.prototype.setHoles = function (holes) { return cordovaInstance(this, \"setHoles\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the holes.\n     * @return {BaseArrayClass<ILatLng[]>}\n     */\n    Polygon.prototype.getHoles = function () {\n        var holes = this._objectInstance.getPoints();\n        var results = new BaseArrayClass();\n        holes.forEach(function (hole) {\n            results.push(hole);\n        });\n        return results;\n    };\n    Polygon.prototype.setFillColor = function (fillColor) { return cordovaInstance(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getFillColor = function () { return cordovaInstance(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Polygon.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setGeodesic = function (geodesic) { return cordovaInstance(this, \"setGeodesic\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getGeodesic = function () { return cordovaInstance(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    return Polygon;\n}(BaseClass));\nexport { Polygon };\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polyline.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polyline.prototype.getMap = function () {\n        return this._map;\n    };\n    Polyline.prototype.setPoints = function (points) { return cordovaInstance(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polyline.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polyline.prototype.setGeoDesic = function (geoDesic) { return cordovaInstance(this, \"setGeoDesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getGeodesic = function () { return cordovaInstance(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setZIndex = function (index) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return Polyline;\n}(BaseClass));\nexport { Polyline };\nvar TileOverlay = /** @class */ (function (_super) {\n    __extends(TileOverlay, _super);\n    function TileOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    TileOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    TileOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    TileOverlay.prototype.setFadeIn = function (fadeIn) { return cordovaInstance(this, \"setFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getFadeIn = function () { return cordovaInstance(this, \"getFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setOpacity = function (opacity) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getTileSize = function () { return cordovaInstance(this, \"getTileSize\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return TileOverlay;\n}(BaseClass));\nexport { TileOverlay };\nvar KmlOverlay = /** @class */ (function (_super) {\n    __extends(KmlOverlay, _super);\n    function KmlOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        Object.defineProperty(self, 'camera', {\n            value: _this._objectInstance.camera,\n            writable: false\n        });\n        Object.defineProperty(self, 'kmlData', {\n            value: _this._objectInstance.kmlData,\n            writable: false\n        });\n        return _this;\n    }\n    KmlOverlay.prototype.getDefaultViewport = function () { return cordovaInstance(this, \"getDefaultViewport\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    KmlOverlay.prototype.getMap = function () { return this._map; };\n    KmlOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return KmlOverlay;\n}(BaseClass));\nexport { KmlOverlay };\nexport { ɵ0, ɵ1 };\n//# sourceMappingURL=data:application/json;base64,","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\" defaultHref=\\\"/app/tabs/inicio\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <ion-select id=\\\"custom-background-select\\\" [(ngModel)]=\\\"municipioSelected\\\" (ionChange)=\\\"buscarLugaresMunicipio()\\\" [interfaceOptions]=\\\"customActionSheetOptions\\\" interface=\\\"popover\\\" class=\\\"form-control\\\" cancelText=\\\"Cancelar\\\" placeholder=\\\"\\\" required>\\n        <ion-select-option [value]=\\\"municipio\\\" *ngFor=\\\"let municipio of municipios\\\">{{municipio.nombre}}</ion-select-option>\\n      </ion-select>\\n    </ion-title>\\n    <!--<ion-buttons slot=\\\"end\\\">\\n      <ion-button>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"locate\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>--> \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div id=\\\"map_canvas\\\">\\n\\n    <ion-grid class=\\\"grid-bottom-page\\\">\\n      <ion-row>\\n        <ion-col class=\\\"col-align-center\\\">\\n          <ion-slides #slides (ionSlideWillChange)=\\\"onSlideChangeStart($event)\\\" [options]=\\\"slideOptions\\\" id=\\\"slide-lugares\\\" pager=\\\"true\\\">\\n            <ion-slide class=\\\"slide-lugar\\\" *ngFor=\\\"let lugar of lugaresMunicipioSelected; let i=index\\\">\\n              <ion-card mode=\\\"ios\\\" class=\\\"card-lugar\\\">\\n              <ion-card-header>\\n                <ion-card-title>{{lugar.Nombre}}</ion-card-title>\\n                <ion-card-subtitle>{{lugar.Direccion}}</ion-card-subtitle>\\n              </ion-card-header>\\n            \\n              <ion-card-content>\\n                <p>{{lugar.Servicios}}</p>\\n                <p>{{lugar.Horario}}</p>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-button shape=\\\"round\\\" color=\\\"primary\\\" (click)=\\\"abrirNavegacionLugar(lugar)\\\">\\n                      <ion-icon slot=\\\"start\\\" src=\\\"../../../assets/icons/directions.svg\\\"></ion-icon>\\n                      Indicaciones\\n                    </ion-button>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-card-content>\\n            </ion-card>\\n            </ion-slide>\\n          </ion-slides>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LugaresPage } from './lugares.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LugaresPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LugaresPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LugaresPageRoutingModule } from './lugares-routing.module';\n\nimport { LugaresPage } from './lugares.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LugaresPageRoutingModule\n  ],\n  declarations: [LugaresPage]\n})\nexport class LugaresPageModule {}\n","export default \"#map_canvas {\\n  height: 100%;\\n}\\n\\n.grid-bottom-page {\\n  position: absolute;\\n  bottom: -20px;\\n  width: 100%;\\n}\\n\\n.card-lugar {\\n  --background: var(--ion-color-light) !important;\\n  text-align: start;\\n  width: 100%;\\n}\\n\\n/*.slide-lugar {\\n    margin-bottom: 10px !important;\\n}*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZnJhaW4vSW9uaWNQcm9qZWN0cy9TRUZJTk1vdmlsL3NyYy9hcHAvcGFnZXMvbHVnYXJlcy9sdWdhcmVzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvbHVnYXJlcy9sdWdhcmVzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsYUFBQTtFQUVBLFdBQUE7QUNBSjs7QURHQTtFQUNJLCtDQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0FDQUo7O0FESUE7O0VBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sdWdhcmVzL2x1Z2FyZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21hcF9jYW52YXMge1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLmdyaWQtYm90dG9tLXBhZ2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IC0yMHB4O1xuICAgIC8vYm90dG9tOiAyMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4uY2FyZC1sdWdhciB7XG4gICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLy9wYWRkaW5nOiAwIDAgMTVweCAwO1xufVxuXG4vKi5zbGlkZS1sdWdhciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweCAhaW1wb3J0YW50O1xufSovIiwiI21hcF9jYW52YXMge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5ncmlkLWJvdHRvbS1wYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IC0yMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhcmQtbHVnYXIge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1saWdodCkgIWltcG9ydGFudDtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKi5zbGlkZS1sdWdhciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweCAhaW1wb3J0YW50O1xufSovIl19 */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { LugaresService } from '../../services/lugares.service';\nimport { Platform, IonSlides } from '@ionic/angular';\nimport { ToastService } from '../../services/toast.service';\n\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\nimport { GoogleMaps, GoogleMap, Environment, GoogleMapOptions, Marker, MarkerOptions, GoogleMapsEvent, MarkerIcon, GoogleMapsMapTypeId, MarkerCluster, GoogleMapsAnimation, LatLng } from '@ionic-native/google-maps/ngx';\n\nimport { LoadingService } from '../../services/loading.service';\n\nimport { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator/ngx';\n\nimport { DOCUMENT} from '@angular/common';\nimport { darkStyle } from './map-dark-style';\n\n@Component({\n  selector: 'lugares',\n  templateUrl: './lugares.page.html',\n  styleUrls: ['./lugares.page.scss'],\n})\nexport class LugaresPage implements OnInit {\n\n  map: GoogleMap;\n\n  customActionSheetOptions: any = {\n    //header: 'Municipios'\n  };\n\n  slideOptions = {\n    initialSlide: 0,\n    centeredSlides: true,\n    loop: true\n  };\n\n  municipios: any[];\n  municipioSelected: any;\n  posicionActual: any;\n  ubicacionActualExito: boolean = false;\n\n  geocoderOptions: NativeGeocoderOptions = {\n    useLocale: true,\n    maxResults: 5\n  };\n\n  lugaresPrueba: any[];\n  lugaresMunicipioSelected: any[];\n  cargandoLugares: boolean = false;\n  marcasLugaresPago: LugarPago[] = [];\n  ultimaMarcaLugarSeleccionado: number = 0;\n\n\n  @ViewChild('slides', { static: true }) slides: IonSlides;\n\n  constructor(\n    @Inject(DOCUMENT) private doc: Document,\n    private lugaresService: LugaresService,\n    private geolocation: Geolocation,\n    private platform: Platform,\n    private toastService: ToastService,\n    private nativeGeocoder: NativeGeocoder,\n    private loadingService: LoadingService,\n    private launchNavigator: LaunchNavigator\n  ) { }\n\n  ngOnInit() {\n    this.platform.ready().then(() => {\n      this.municipios = this.lugaresService.getMunicipios();\n      this.lugaresPrueba = this.lugaresService.getLugaresPrueba();\n      this.municipioSelected = this.municipios[1];//capital campeche\n      \n      setTimeout(()=> {\n        this.inicializarMapa();\n        this.setEstiloMapa();\n        this.buscarLugaresMunicipio();\n        //this.obtenerPosicionActualUsuario();\n      }, 200);\n    });\n\n  }\n\n  /**\n   * Inicializacion del mapa en la posicion seleccionada\n   */\n  inicializarMapa() {\n    /// This code is necessary for browser\n    Environment.setEnv({\n      'API_KEY_FOR_BROWSER_RELEASE': 'AIzaSyDJxtizfmmnhBASqy8rt_ioQ3NjLO_XbJQ',\n      'API_KEY_FOR_BROWSER_DEBUG': 'AIzaSyDJxtizfmmnhBASqy8rt_ioQ3NjLO_XbJQ'\n    });\n    \n    let mapOptions: GoogleMapOptions = {\n      camera: {\n        target: {\n          lat: this.municipioSelected.lat,\n          lng: this.municipioSelected.lng\n        },\n        zoom: 15,\n        //tilt: 30,\n      },\n      mapType: GoogleMapsMapTypeId.ROADMAP,\n      toolbar: true,\n      controls: {\n        'compass': true,\n        'myLocationButton': true,\n        'myLocation': true,   // (blue dot)\n        'indoorPicker': true,\n        'zoom': false,          // android only\n        'mapToolbar': false     // android only\n      }\n    }\n\n    this.map = GoogleMaps.create('map_canvas', mapOptions);\n\n  }\n\n  /**\n   * Establecer estilo actual al mapa\n   */\n  setEstiloMapa() {\n    const appEl = this.doc.querySelector('ion-app');\n    let style = [];\n    if (appEl.classList.contains('dark-theme')) {\n      style = darkStyle;\n      this.map.setOptions({styles: style});\n    } else {\n      this.map.setOptions({styles: []});\n    }\n\n  }\n\n  /**\n   * Centrar mapa en base a la localidad seleccionada\n   */\n  buscarLugaresMunicipio() {\n    this.lugaresMunicipioSelected = [];\n    this.marcasLugaresPago = [];\n    this.cargandoLugares = true;\n    this.loadingService.present();\n\n    if(this.map)\n      this.map.clear();\n\n    //centrar maps\n    console.log(\"Nuevo municipio seleccionado: \", this.municipioSelected);\n    this.map.animateCamera({\n      target: {\n        lat: this.municipioSelected.lat,\n        lng: this.municipioSelected.lng\n      },\n      zoom: 15,\n      //tilt: 30,\n      duration: 1000\n    });\n\n    //simular carga lugares de pago\n    setTimeout(()=> {\n      this.lugaresMunicipioSelected = this.lugaresPrueba.filter((elem)=> {\n        return elem.IdMunicipio === this.municipioSelected.id;\n      });\n\n      if(this.lugaresMunicipioSelected.length > 0) {\n        console.log(\"Lugares de pago municipio: \" + JSON.stringify(this.lugaresMunicipioSelected, null));\n        //dibujamos lugares de pago\n        this.marcarLugaresPagoMunicipioSeleccionado(this.lugaresMunicipioSelected);\n        this.cargandoLugares = false;\n        this.loadingService.dismiss();\n      } else {\n        console.log(\"No se encontraron lugares de pago para el municipio seleccionado\");\n        this.cargandoLugares = false;\n        this.loadingService.dismiss();\n      }\n\n    }, 500);\n\n  }\n\n  /**\n   * Marcar en el mapa los lugares de pago del municipio seleccionado\n   * @param lugares \n   */\n  marcarLugaresPagoMunicipioSeleccionado(lugares:any[]) {\n    if(lugares.length > 0) {\n\n      lugares.forEach((lugar, i)=> {\n        this.marcasLugaresPago.push(new LugarPago(i, lugar, lugar.Lat, lugar.Lng, this.map, this.slides));\n        if(i === 0){\n          this.marcasLugaresPago[i].seleccionado(this.map, this.slides)\n          this.ultimaMarcaLugarSeleccionado = i;\n        }\n          \n      });\n      \n    } \n  }\n\n  /**\n   * Seleccionar lugar de pago en base al slide seleccionado\n   * @param event \n   */\n  onSlideChangeStart(event) {\n    event.target.isEnd().then(isEnd => {\n      this.slides.getActiveIndex().then(index => {\n        if(index >= 0) {\n          this.marcasLugaresPago[this.ultimaMarcaLugarSeleccionado].noSeleccionado();\n          this.marcasLugaresPago[index].seleccionado(this.map, this.slides);\n          this.ultimaMarcaLugarSeleccionado = index;\n        }\n        \n      });\n    });\n  }\n\n  /**\n   * Abrir navegacion google maps hacia el destino seleccionado\n   * @param destino \n   */\n  abrirNavegacionLugar(destino: any) {\n\n    console.log(\"Intentando navegar hacia destino..\");\n    console.log(destino);\n\n    let options: LaunchNavigatorOptions = {\n      app: this.launchNavigator.APP.GOOGLE_MAPS\n    }\n\n    try {\n\n      this.launchNavigator.isAppAvailable(this.launchNavigator.APP.GOOGLE_MAPS).then(isAvailable=> {\n        if(isAvailable) {\n          this.launchNavigator.navigate([destino.Lat, destino.Lng], options).then(success=> {\n            console.log(\"Navegador lanzado correctamente\");\n          }, error => {\n            console.log(\"Error lanzando navegador\", error);\n            this.toastService.info(\"Ocurrió un problema al intentar navegar al destino seleccionado. Intente mas tarde.\");\n          });\n        } else {\n          this.toastService.info(\"Google Maps no se encuentra disponible en su dispositivo. Intente mas tarde.\");\n        }\n\n      }, err => {\n        console.log(\"Error lanzando navegador\", err);\n        this.toastService.info(\"Ocurrió un problema al intentar navegar al destino seleccionado. Intente mas tarde.\");\n      });\n\n    } catch(e) {\n      console.log(\"Error lanzando navegador\", e);\n      this.toastService.info(\"Ocurrió un problema al intentar navegar al destino seleccionado. Intente mas tarde.\");\n    }\n  }\n\n  /**\n   * Solicitar la ubicacion actual del usuario\n   */\n  obtenerPosicionActualUsuario() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n      console.log(\"Ubicacion actual: \", resp);\n      this.posicionActual = resp;\n      if(this.posicionActual) {\n        this.decodificarPosicionActualUsuario();\n      }\n      \n     }).catch((error) => {\n       console.log('Error al obtener la ubicación', error);\n       this.toastService.info('No fue posible acceder a su ubicación actual');\n     });\n  }\n\n  /**\n   * Decodificar latitud longitud para obtener los datos de la \n   * ubicacion del usuario\n   */\n  decodificarPosicionActualUsuario() {\n    this.nativeGeocoder.reverseGeocode(this.posicionActual.coords.latitude, this.posicionActual.coords.longitude, this.geocoderOptions)\n    .then((result: NativeGeocoderResult[]) => {\n      console.log(\"Detalles ubicacion actual: \");\n      console.log(JSON.stringify(result[0]))\n      alert(JSON.stringify(result[0]));\n\n      if(result && result.length > 0) {\n        this.ubicacionActualExito = true;\n      }\n\n    })\n    .catch((error: any) => {\n      console.log('Error al decodificar la ubicación actual', error)\n      this.toastService.info('No fue posible acceder a su ubicación actual');\n    });\n  }\n\n}\n\n\nclass LugarPago {\n  index: number;\n  position: LatLng;\n  marker: Marker;\n  lat: number;\n  lng: number;\n\n  constructor(index: number, lugar: any, lat: number, lng: number, map: GoogleMap, slides: IonSlides) {\n    this.index = index;\n    this.lat = lat;\n    this.lng = lng;\n\n    this.marker = map.addMarkerSync({\n      //title: lugar.Nombre,\n      //snippet: lugar.Servicios,\n      animation: \"DROP\",\n      icon: {\n        url: \"./assets/icons/place.png\",\n        size: {\n          width: 25,\n          height: 25\n        }\n      },\n      position: {\n        lat: this.lat,\n        lng: this.lng\n      }\n    });\n\n    this.marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(() => {\n      this.clickMarker(slides);\n    });\n\n  }\n\n  /**\n   * Cuando se selecciona una marca\n   * @param slides \n   */\n  clickMarker(slides: IonSlides) {\n    //actualizar slide\n    slides.slideTo(this.index, 200);\n  }\n\n  /**\n   * Cuando se actualiza el slide\n   * @param map \n   */\n  seleccionado(map: GoogleMap, slides: IonSlides) {\n    //centrar\n    let position = this.marker.getPosition();\n\n    map.animateCamera({\n      target: {\n        lat: position.lat,\n        lng: position.lng\n      },\n      duration: 200\n    });\n\n    //icono\n    this.marker.setIcon({\n      url: './assets/icons/marker-selected.png',\n      size: {\n        width: 20,\n        height: 35\n      }\n    });\n\n    //animacion\n    this.marker.setAnimation(\"DROP\");\n\n    //info\n    //this.marker.showInfoWindow();\n  }\n\n  /**\n   * Cuando se deselecciona una marca\n   */\n  noSeleccionado() {\n    this.marker.setIcon({\n      url: './assets/icons/place.png',\n      size: {\n        width: 25,\n        height: 25\n      }\n    });\n  }\n\n  /**\n   * Obtener indice de la marca\n   */\n  getIndex() {\n    return this.index;\n  }\n}\n","export const darkStyle = [\n  {\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#242f3e\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#746855\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#242f3e\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative.locality\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#263c3f\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#6b9a76\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#38414e\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#212a37\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#9ca5b3\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#746855\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#1f2835\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#f3d19c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#2f3948\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit.station\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#d59563\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#17263c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#515c6d\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#17263c\"\n      }\n    ]\n  }\n]","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { AppOptions, AppConfig } from '../app.config'; \n\nconst httpOptions = {\n  headers: new HttpHeaders({ \n    'Content-Type': 'application/json' \n  })\n}\n\nconst appConfig: AppOptions = AppConfig();\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LugaresService {\n\n  constructor(\n    private http: HttpClient\n  ) {\n\n   }\n\n   /**\n   * Obtener catálogo municipios\n   */\n  getMunicipios() {\n    return [\n      {\n        id: 1,\n        nombre: \"Calkiní\",\n        lat: 20.3708555,\n        lng: -90.05046829999998\n      },\n      {\n        id: 2,\n        nombre: \"Campeche\",\n        lat: 19.830125,\n        lng: -90.5349086111111\n      },\n      {\n        id: 3,\n        nombre: \"Carmen\",\n        lat: 18.6504879,\n        lng: -91.80745860000002\n      },\n      {\n        id: 4,\n        nombre: \"Champotón\",\n        lat: 19.3471645,\n        lng: -90.72002370000001\n      },\n      {\n        id: 5,\n        nombre: \"Hecelchakán\",\n        lat: 20.1819021,\n        lng: -90.13545859999999\n      },\n      {\n        id: 6,\n        nombre: \"Hopelchén\",\n        lat: 19.7472419,\n        lng: -89.84246439999998\n      },\n      {\n        id: 7,\n        nombre: \"Palizada\",\n        lat: 18.2545777,\n        lng: -92.09147989999997\n      },\n      {\n        id: 8,\n        nombre: \"Tenabo\",\n        lat: 20.0409674,\n        lng: -90.22555190000003\n      },\n      {\n        id: 9,\n        nombre: \"Escárcega\",\n        lat: 18.6101834,\n        lng: -90.73902450000003\n      },\n      {\n        id: 10,\n        nombre: \"Calakmul\",\n        lat: 18.5054461,\n        lng: -89.3935247\n      },\n      {\n        id: 11,\n        nombre: \"Candelaria\",\n        lat: 18.1845319,\n        lng: -91.0418568\n      } \n    ];\n  }\n\n  /**\n   * Modulos de pago prueba\n   */\n  getLugaresPrueba() {\n    return [\n      {\n        IdMunicipio: 2,//campeche\n        Nombre: \"SEAFI Campeche\",\n        Direccion: \"Calle 49-C o Circuito Baluartes N° 39 entre Calle Ciriaco Vázquez, Barrio de Guadalupe, Zona Centro, 24000 Campeche, Camp.\",\n        Servicios: \"Servicios Financieros Campeche\",\n        Horario: \"Lunes a Viernes de 8:00 a 16:00\",\n        Lat: 19.8455045,\n        Lng: -90.5353135\n      },\n      {\n        IdMunicipio: 2,//campeche\n        Nombre: \"Servicio De Administración Fiscal\",\n        Direccion: \"Calle 49C 39, Barrio de Guadalupe, 24010 Campeche, Camp.\",\n        Servicios: \"Servicios Financieros Campeche\",\n        Horario: \"Lunes a Viernes de 8:00 a 16:00\",\n        Lat: 19.8439067,\n        Lng: -90.5346504\n      },\n      {\n        IdMunicipio: 2,//campeche\n        Nombre: \"Secretaría de Finanzas Campeche\",\n        Direccion: \"Calle 8, Zona Centro, 24000 Campeche, Camp.\",\n        Servicios: \"Servicios Financieros Campeche\",\n        Horario: \"Lunes a Viernes de 8:00 a 20:00\",\n        Lat: 19.840483, \n        Lng: -90.536803\n      },\n      {\n        IdMunicipio: 2,//campeche\n        Nombre: \"Secretaría de Administración e Innovación Gubernamental\",\n        Direccion: \"Calle 8 325, Zona Centro, 24000 Campeche, Camp.\",\n        Servicios: \"Servicios Financieros Campeche\",\n        Horario: \"Lunes a Viernes de 8:00 a 16:00\",\n        Lat: 19.8451439,\n        Lng: -90.5420417\n      },\n      {\n        IdMunicipio: 4,//champoton\n        Nombre: \"SECRETARIA DE FINANZAS OFICINA RECAUDADORA\",\n        Direccion: \"Calle 1 #17, Venustiano Carranza, 24400 Champotón, Camp.\",\n        Servicios: \"Servicios Financieros Campeche\",\n        Horario: \"Lunes a Viernes de 8:00 a 14:30\",\n        Lat: 19.356353,\n        Lng: -90.723960\n      },\n      {\n        IdMunicipio: 1,//calkini\n        Nombre: \"Palacio Municipal de Calkini\",\n        Direccion: \"S/N, entre y, Calle 17 & Calle 20, Centro, Calkiní, Camp.\",\n        Servicios: \"Servicios Financieros Campeche\",\n        Horario: \"Lunes a Viernes de 8:00 a 14:30\",\n        Lat: 20.3704588,\n        Lng: -90.0581788\n      }\n    ];\n  }\n}\n"]}